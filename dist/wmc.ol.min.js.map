{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/xmlbuilder/lib/NodeType.js","webpack:///./node_modules/xmlbuilder/lib/XMLNode.js","webpack:///./node_modules/xmlbuilder/lib/Utility.js","webpack:///./node_modules/xmlbuilder/lib/XMLCharacterData.js","webpack:///./node_modules/xmlbuilder/lib/WriterState.js","webpack:///./node_modules/xmlbuilder/lib/XMLElement.js","webpack:///./node_modules/xmlbuilder/lib/XMLNamedNodeMap.js","webpack:///./node_modules/xmlbuilder/lib/XMLCData.js","webpack:///./node_modules/xmlbuilder/lib/XMLComment.js","webpack:///./node_modules/xmlbuilder/lib/XMLDeclaration.js","webpack:///./node_modules/xmlbuilder/lib/XMLDocType.js","webpack:///./node_modules/xmlbuilder/lib/XMLDTDAttList.js","webpack:///./node_modules/xmlbuilder/lib/XMLDTDEntity.js","webpack:///./node_modules/xmlbuilder/lib/XMLDTDElement.js","webpack:///./node_modules/xmlbuilder/lib/XMLDTDNotation.js","webpack:///./node_modules/xmlbuilder/lib/XMLRaw.js","webpack:///./node_modules/xmlbuilder/lib/XMLText.js","webpack:///./node_modules/xmlbuilder/lib/XMLProcessingInstruction.js","webpack:///./node_modules/xmlbuilder/lib/XMLStringWriter.js","webpack:///./node_modules/xmlbuilder/lib/XMLDOMImplementation.js","webpack:///./node_modules/xmlbuilder/lib/XMLDocument.js","webpack:///./node_modules/xmlbuilder/lib/XMLAttribute.js","webpack:///./node_modules/xmlbuilder/lib/XMLDummy.js","webpack:///./node_modules/xmlbuilder/lib/XMLStringifier.js","webpack:///./node_modules/xmlbuilder/lib/XMLWriterBase.js","webpack:///./node_modules/xmlbuilder/lib/index.js","webpack:///./src/templates/wmc.html","webpack:///./node_modules/xmlbuilder/lib/XMLDOMConfiguration.js","webpack:///./node_modules/xmlbuilder/lib/XMLDOMErrorHandler.js","webpack:///./node_modules/xmlbuilder/lib/XMLDOMStringList.js","webpack:///./node_modules/xmlbuilder/lib/XMLNodeList.js","webpack:///./node_modules/xmlbuilder/lib/DocumentPosition.js","webpack:///./node_modules/xmlbuilder/lib/XMLDocumentCB.js","webpack:///./node_modules/xmlbuilder/lib/XMLStreamWriter.js","webpack:///./src/impl/ol/js/wmccontrol.js","webpack:///./src/impl/ol/js/wmclayer.js","webpack:///./src/facade/js/wmclayer.js","webpack:///./src/facade/js/wmccontrol.js","webpack:///./src/facade/js/wmc.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Element","Attribute","Text","CData","EntityReference","EntityDeclaration","ProcessingInstruction","Comment","Document","DocType","DocumentFragment","NotationDeclaration","Declaration","Raw","AttributeDeclaration","ElementDeclaration","Dummy","this","DocumentPosition","NodeType","XMLCData","XMLComment","XMLDeclaration","XMLDocType","XMLDummy","XMLElement","XMLNodeList","XMLProcessingInstruction","XMLRaw","XMLText","getValue","isEmpty","isFunction","isObject","hasProp","splice","XMLNode","parent1","parent","options","stringify","children","baseURI","child","j","len","ref1","results","length","push","setParent","attributes","text","childNode","item","k","lastChild","len1","val","Array","isArray","element","apply","ignoreDecorators","convertAttKey","indexOf","attribute","substr","separateArrayItems","dummy","keepNullNodes","convertTextKey","convertCDataKey","cdata","convertCommentKey","comment","convertRawKey","raw","convertPIKey","instruction","node","Error","debugInfo","newChild","refChild","removed","type","isRoot","concat","target","insTarget","insValue","version","encoding","standalone","doc","xmldec","document","unshift","root","pubID","sysID","doctype","ref2","rootObject","end","clonedRoot","clone","documentObject","declaration","up","importDocument","oldChild","deep","feature","attribs","other","res","Disconnected","ImplementationSpecific","Math","random","Preceding","Following","isAncestor","Contains","isDescendant","isPreceding","namespaceURI","prefix","nodeType","isEqualNode","data","handler","nodePos","thisPos","treePosition","found","pos","foreachTreeNode","func","childNodeList","nodes","str","textContent","set","assign","isPlainObject","sources","source","arguments","toString","ref","ctor","proto","getPrototypeOf","constructor","Function","obj","valueOf","XMLCharacterData","super","offset","count","arg","None","OpenTag","InsideTag","CloseTag","XMLAttribute","XMLNamedNodeMap","schemaTypeInfo","att","attName","clonedSelf","forEach","clonedChild","attValue","keepNullAttributes","writer","filterOptions","newAttr","oldAttr","localName","qualifiedName","isId","idAttr","tagname","classNames","attributeMap","oldNode","nodeName","index","keys","xmlVersion","xmlEncoding","xmlStandalone","XMLDTDAttList","XMLDTDElement","XMLDTDEntity","XMLDTDNotation","dtdPubID","dtdSysID","elementName","attributeName","attributeType","defaultValueType","defaultValue","docType","attList","entity","pEntity","notation","publicId","systemId","pe","match","dtdAttType","dtdAttDefault","dtdAttList","internal","nData","dtdNData","dtdEntityValue","dtdEntity","join","dtdElementValue","dtdElement","dtdNotation","content","next","prev","previousSibling","nextSibling","processingInstruction","XMLWriterBase","writeChildNode","pretty","slice","newline","title","XMLDOMConfiguration","XMLDOMImplementation","XMLStringWriter","XMLStringifier","XMLDocument","documentURI","domConfig","writerOptions","tagName","importedNode","elementId","eventInterface","whatToShow","filter","assertLegalChar","assertLegalName","noValidation","textEscape","replace","attEscape","regex","ampregex","noDoubleEncoding","WriterState","filteredOptions","ref3","ref4","ref5","ref6","ref7","allowEmpty","indent","width","dontPrettyTextNodes","dontprettytextnodes","spaceBeforeSlash","spacebeforeslash","suppressPrettyCount","user","state","level","indentLevel","openAttribute","closeAttribute","openNode","endline","closeNode","childNodeCount","firstChildNode","len2","prettySuppressed","ratt","rline","every","e","XMLDocumentCB","XMLStreamWriter","headless","dtd","begin","onData","onEnd","stringWriter","streamWriter","stream","implementation","writerState","XMLDOMErrorHandler","XMLDOMStringList","defaultParams","params","error","arr","ContainedBy","onDataCallback","onEndCallback","currentNode","currentLevel","openTags","documentStarted","documentCompleted","createChildNode","openCurrent","oldValidationFlag","rootNodeName","chunk","isOpen","isClosed","isLastRootNode","write","WmcControl","M","impl","Control","map","html","facadeMap_","olMap","getMapImpl","ol","control","addControl","viewContext","General","BoundingBox","LayerList","Layer","$version","$xmlns","$id","Title","$SRS","getProjection","code","extent","getBbox","$minx","x","min","$miny","y","$maxx","max","$maxy","KeywordList","Keyword","Abstract","Extension","maxExtent","getMaxExtent","getWMS","layer","wmcLayer","$hidden","isVisible","$queryable","isQueryable","Name","legend","Server","OnlineResource","url","$service","transparent","StyleList","Style","$current","LegendURL","$width","$height","$format","getLegendURL","getOpacity","displayInLayerSwitcher","tiled","WmcLayer","projection","WMC","selected","getWMC","unselect","setProjection","getCode","units","getUnits","utils","isNullOrEmpty","bbox","setBbox","nearest","dialog","info","setMaxExtent","layers","addWMS","fire","evt","CHANGE_WMC","documentXML","Promise","success","fail","context","format","wmc","readFromDocument","remote","then","response","wmcDocument","xml","sort","layerA","layerB","result","visibleA","visibleB","isBaseLayerA","isBaseLayerB","bounds","proj","isUndefined","WmcLayerImpl","exception","setImpl","WmcImplControl","file_","inputUrl_","loadBtn_","saveBtn_","inputsTabs_","selectedTab_","inputWMCLoadName_","inputWMCSaveName_","inputFile","querySelector","querySelectorAll","dataset","tab","addEventListener","changeFile","files","loadWMC","saveWMC","checkButtons","changeTab","template","compileSync","addEvents","selector","CSS","escape","itemTarget","window","event","disabled","file","size","trim","fileName","ViewContext","getImpl","getViewContext","xmlbuilder","textFileAsBlob","Blob","navigator","msSaveOrOpenBlob","downloadLink","createElement","download","innerHTML","href","URL","createObjectURL","onclick","destroyClickedElement","style","display","body","appendChild","click","fileReader","FileReader","DOMParser","parseFromString","addToMap","readAsText","addWMC","ADDED_LAYER","ADDED_WMC","loadContext","loadContextParameters","wmcselectorActive","getControls","addControls","WMCSelector","select","removeChild","Wmc","parameters","map_","control_","panel_","params_","options_","metadata_","api","metadata","Plugin","ui","Panel","collapsible","className","collapsedButtonClass","position","TR","tooltip","on","ADDED_TO_MAP","enableTouchScroll","addPanels","removeControls","plugin","M$plugin$Wmc","M$control$WmcControl","M$impl$control$WmcControl","M$impl$control$WmcLayer"],"mappings":"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","file":"wmc.ol.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 36);\n","// Generated by CoffeeScript 2.4.1\n(function() {\n  module.exports = {\n    Element: 1,\n    Attribute: 2,\n    Text: 3,\n    CData: 4,\n    EntityReference: 5,\n    EntityDeclaration: 6,\n    ProcessingInstruction: 7,\n    Comment: 8,\n    Document: 9,\n    DocType: 10,\n    DocumentFragment: 11,\n    NotationDeclaration: 12,\n    // Numeric codes up to 200 are reserved to W3C for possible future use.\n    // Following are types internal to this library:\n    Declaration: 201,\n    Raw: 202,\n    AttributeDeclaration: 203,\n    ElementDeclaration: 204,\n    Dummy: 205\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 2.4.1\n(function() {\n  var DocumentPosition, NodeType, XMLCData, XMLComment, XMLDeclaration, XMLDocType, XMLDummy, XMLElement, XMLNamedNodeMap, XMLNode, XMLNodeList, XMLProcessingInstruction, XMLRaw, XMLText, getValue, isEmpty, isFunction, isObject,\n    hasProp = {}.hasOwnProperty,\n    splice = [].splice;\n\n  ({isObject, isFunction, isEmpty, getValue} = require('./Utility'));\n\n  XMLElement = null;\n\n  XMLCData = null;\n\n  XMLComment = null;\n\n  XMLDeclaration = null;\n\n  XMLDocType = null;\n\n  XMLRaw = null;\n\n  XMLText = null;\n\n  XMLProcessingInstruction = null;\n\n  XMLDummy = null;\n\n  NodeType = null;\n\n  XMLNodeList = null;\n\n  XMLNamedNodeMap = null;\n\n  DocumentPosition = null;\n\n  // Represents a generic XMl element\n  module.exports = XMLNode = (function() {\n    class XMLNode {\n      // Initializes a new instance of `XMLNode`\n\n      // `parent` the parent node\n      constructor(parent1) {\n        this.parent = parent1;\n        if (this.parent) {\n          this.options = this.parent.options;\n          this.stringify = this.parent.stringify;\n        }\n        this.value = null;\n        this.children = [];\n        this.baseURI = null;\n        // first execution, load dependencies that are otherwise\n        // circular (so we can't load them at the top)\n        if (!XMLElement) {\n          XMLElement = require('./XMLElement');\n          XMLCData = require('./XMLCData');\n          XMLComment = require('./XMLComment');\n          XMLDeclaration = require('./XMLDeclaration');\n          XMLDocType = require('./XMLDocType');\n          XMLRaw = require('./XMLRaw');\n          XMLText = require('./XMLText');\n          XMLProcessingInstruction = require('./XMLProcessingInstruction');\n          XMLDummy = require('./XMLDummy');\n          NodeType = require('./NodeType');\n          XMLNodeList = require('./XMLNodeList');\n          XMLNamedNodeMap = require('./XMLNamedNodeMap');\n          DocumentPosition = require('./DocumentPosition');\n        }\n      }\n\n      \n      // Sets the parent node of this node and its children recursively\n\n      // `parent` the parent node\n      setParent(parent) {\n        var child, j, len, ref1, results;\n        this.parent = parent;\n        if (parent) {\n          this.options = parent.options;\n          this.stringify = parent.stringify;\n        }\n        ref1 = this.children;\n        results = [];\n        for (j = 0, len = ref1.length; j < len; j++) {\n          child = ref1[j];\n          results.push(child.setParent(this));\n        }\n        return results;\n      }\n\n      // Creates a child element node\n\n      // `name` node name or an object describing the XML tree\n      // `attributes` an object containing name/value pairs of attributes\n      // `text` element text\n      element(name, attributes, text) {\n        var childNode, item, j, k, key, lastChild, len, len1, val;\n        lastChild = null;\n        if (attributes === null && (text == null)) {\n          [attributes, text] = [{}, null];\n        }\n        if (attributes == null) {\n          attributes = {};\n        }\n        attributes = getValue(attributes);\n        // swap argument order: text <-> attributes\n        if (!isObject(attributes)) {\n          [text, attributes] = [attributes, text];\n        }\n        if (name != null) {\n          name = getValue(name);\n        }\n        // expand if array\n        if (Array.isArray(name)) {\n          for (j = 0, len = name.length; j < len; j++) {\n            item = name[j];\n            lastChild = this.element(item);\n          }\n        // evaluate if function\n        } else if (isFunction(name)) {\n          lastChild = this.element(name.apply());\n        // expand if object\n        } else if (isObject(name)) {\n          for (key in name) {\n            if (!hasProp.call(name, key)) continue;\n            val = name[key];\n            if (isFunction(val)) {\n              // evaluate if function\n              val = val.apply();\n            }\n            // assign attributes\n            if (!this.options.ignoreDecorators && this.stringify.convertAttKey && key.indexOf(this.stringify.convertAttKey) === 0) {\n              lastChild = this.attribute(key.substr(this.stringify.convertAttKey.length), val);\n            // skip empty arrays\n            } else if (!this.options.separateArrayItems && Array.isArray(val) && isEmpty(val)) {\n              lastChild = this.dummy();\n            // empty objects produce one node\n            } else if (isObject(val) && isEmpty(val)) {\n              lastChild = this.element(key);\n            // skip null and undefined nodes\n            } else if (!this.options.keepNullNodes && (val == null)) {\n              lastChild = this.dummy();\n            \n            // expand list by creating child nodes\n            } else if (!this.options.separateArrayItems && Array.isArray(val)) {\n              for (k = 0, len1 = val.length; k < len1; k++) {\n                item = val[k];\n                childNode = {};\n                childNode[key] = item;\n                lastChild = this.element(childNode);\n              }\n            \n            // expand child nodes under parent\n            } else if (isObject(val)) {\n              // if the key is #text expand child nodes under this node to support mixed content\n              if (!this.options.ignoreDecorators && this.stringify.convertTextKey && key.indexOf(this.stringify.convertTextKey) === 0) {\n                lastChild = this.element(val);\n              } else {\n                lastChild = this.element(key);\n                lastChild.element(val);\n              }\n            } else {\n              \n              // text node\n              lastChild = this.element(key, val);\n            }\n          }\n        // skip null nodes\n        } else if (!this.options.keepNullNodes && text === null) {\n          lastChild = this.dummy();\n        } else {\n          // text node\n          if (!this.options.ignoreDecorators && this.stringify.convertTextKey && name.indexOf(this.stringify.convertTextKey) === 0) {\n            lastChild = this.text(text);\n          // cdata node\n          } else if (!this.options.ignoreDecorators && this.stringify.convertCDataKey && name.indexOf(this.stringify.convertCDataKey) === 0) {\n            lastChild = this.cdata(text);\n          // comment node\n          } else if (!this.options.ignoreDecorators && this.stringify.convertCommentKey && name.indexOf(this.stringify.convertCommentKey) === 0) {\n            lastChild = this.comment(text);\n          // raw text node\n          } else if (!this.options.ignoreDecorators && this.stringify.convertRawKey && name.indexOf(this.stringify.convertRawKey) === 0) {\n            lastChild = this.raw(text);\n          // processing instruction\n          } else if (!this.options.ignoreDecorators && this.stringify.convertPIKey && name.indexOf(this.stringify.convertPIKey) === 0) {\n            lastChild = this.instruction(name.substr(this.stringify.convertPIKey.length), text);\n          } else {\n            // element node\n            lastChild = this.node(name, attributes, text);\n          }\n        }\n        if (lastChild == null) {\n          throw new Error(\"Could not create any elements with: \" + name + \". \" + this.debugInfo());\n        }\n        return lastChild;\n      }\n\n      // Creates a child element node before the current node\n\n      // `name` node name or an object describing the XML tree\n      // `attributes` an object containing name/value pairs of attributes\n      // `text` element text\n      insertBefore(name, attributes, text) {\n        var child, i, newChild, refChild, removed;\n        // DOM level 1\n        // insertBefore(newChild, refChild) inserts the child node newChild before refChild\n        if (name != null ? name.type : void 0) {\n          newChild = name;\n          refChild = attributes;\n          newChild.setParent(this);\n          if (refChild) {\n            // temporarily remove children starting *with* refChild\n            i = children.indexOf(refChild);\n            removed = children.splice(i);\n            \n            // add the new child\n            children.push(newChild);\n            \n            // add back removed children after new child\n            Array.prototype.push.apply(children, removed);\n          } else {\n            children.push(newChild);\n          }\n          return newChild;\n        } else {\n          if (this.isRoot) {\n            throw new Error(\"Cannot insert elements at root level. \" + this.debugInfo(name));\n          }\n          \n          // temporarily remove children starting *with* this\n          i = this.parent.children.indexOf(this);\n          removed = this.parent.children.splice(i);\n          \n          // add the new child\n          child = this.parent.element(name, attributes, text);\n          \n          // add back removed children after new child\n          Array.prototype.push.apply(this.parent.children, removed);\n          return child;\n        }\n      }\n\n      // Creates a child element node after the current node\n\n      // `name` node name or an object describing the XML tree\n      // `attributes` an object containing name/value pairs of attributes\n      // `text` element text\n      insertAfter(name, attributes, text) {\n        var child, i, removed;\n        if (this.isRoot) {\n          throw new Error(\"Cannot insert elements at root level. \" + this.debugInfo(name));\n        }\n        \n        // temporarily remove children starting *after* this\n        i = this.parent.children.indexOf(this);\n        removed = this.parent.children.splice(i + 1);\n        \n        // add the new child\n        child = this.parent.element(name, attributes, text);\n        \n        // add back removed children after new child\n        Array.prototype.push.apply(this.parent.children, removed);\n        return child;\n      }\n\n      // Deletes a child element node\n\n      remove() {\n        var i, ref1;\n        if (this.isRoot) {\n          throw new Error(\"Cannot remove the root element. \" + this.debugInfo());\n        }\n        i = this.parent.children.indexOf(this);\n        splice.apply(this.parent.children, [i, i - i + 1].concat(ref1 = [])), ref1;\n        return this.parent;\n      }\n\n      // Creates a node\n\n      // `name` name of the node\n      // `attributes` an object containing name/value pairs of attributes\n      // `text` element text\n      node(name, attributes, text) {\n        var child;\n        if (name != null) {\n          name = getValue(name);\n        }\n        attributes || (attributes = {});\n        attributes = getValue(attributes);\n        // swap argument order: text <-> attributes\n        if (!isObject(attributes)) {\n          [text, attributes] = [attributes, text];\n        }\n        child = new XMLElement(this, name, attributes);\n        if (text != null) {\n          child.text(text);\n        }\n        this.children.push(child);\n        return child;\n      }\n\n      // Creates a text node\n\n      // `value` element text\n      text(value) {\n        var child;\n        if (isObject(value)) {\n          this.element(value);\n        }\n        child = new XMLText(this, value);\n        this.children.push(child);\n        return this;\n      }\n\n      // Creates a CDATA node\n\n      // `value` element text without CDATA delimiters\n      cdata(value) {\n        var child;\n        child = new XMLCData(this, value);\n        this.children.push(child);\n        return this;\n      }\n\n      // Creates a comment node\n\n      // `value` comment text\n      comment(value) {\n        var child;\n        child = new XMLComment(this, value);\n        this.children.push(child);\n        return this;\n      }\n\n      // Creates a comment node before the current node\n\n      // `value` comment text\n      commentBefore(value) {\n        var child, i, removed;\n        // temporarily remove children starting *with* this\n        i = this.parent.children.indexOf(this);\n        removed = this.parent.children.splice(i);\n        // add the new child\n        child = this.parent.comment(value);\n        // add back removed children after new child\n        Array.prototype.push.apply(this.parent.children, removed);\n        return this;\n      }\n\n      // Creates a comment node after the current node\n\n      // `value` comment text\n      commentAfter(value) {\n        var child, i, removed;\n        // temporarily remove children starting *after* this\n        i = this.parent.children.indexOf(this);\n        removed = this.parent.children.splice(i + 1);\n        // add the new child\n        child = this.parent.comment(value);\n        // add back removed children after new child\n        Array.prototype.push.apply(this.parent.children, removed);\n        return this;\n      }\n\n      // Adds unescaped raw text\n\n      // `value` text\n      raw(value) {\n        var child;\n        child = new XMLRaw(this, value);\n        this.children.push(child);\n        return this;\n      }\n\n      // Adds a dummy node\n      dummy() {\n        var child;\n        child = new XMLDummy(this);\n        // Normally when a new node is created it is added to the child node collection.\n        // However, dummy nodes are never added to the XML tree. They are created while\n        // converting JS objects to XML nodes in order not to break the recursive function\n        // chain. They can be thought of as invisible nodes. They can be traversed through\n        // by using prev(), next(), up(), etc. functions but they do not exists in the tree.\n\n        // @children.push child\n        return child;\n      }\n\n      // Adds a processing instruction\n\n      // `target` instruction target\n      // `value` instruction value\n      instruction(target, value) {\n        var insTarget, insValue, instruction, j, len;\n        if (target != null) {\n          target = getValue(target);\n        }\n        if (value != null) {\n          value = getValue(value);\n        }\n        if (Array.isArray(target)) { // expand if array\n          for (j = 0, len = target.length; j < len; j++) {\n            insTarget = target[j];\n            this.instruction(insTarget);\n          }\n        } else if (isObject(target)) { // expand if object\n          for (insTarget in target) {\n            if (!hasProp.call(target, insTarget)) continue;\n            insValue = target[insTarget];\n            this.instruction(insTarget, insValue);\n          }\n        } else {\n          if (isFunction(value)) {\n            value = value.apply();\n          }\n          instruction = new XMLProcessingInstruction(this, target, value);\n          this.children.push(instruction);\n        }\n        return this;\n      }\n\n      // Creates a processing instruction node before the current node\n\n      // `target` instruction target\n      // `value` instruction value\n      instructionBefore(target, value) {\n        var child, i, removed;\n        // temporarily remove children starting *with* this\n        i = this.parent.children.indexOf(this);\n        removed = this.parent.children.splice(i);\n        // add the new child\n        child = this.parent.instruction(target, value);\n        // add back removed children after new child\n        Array.prototype.push.apply(this.parent.children, removed);\n        return this;\n      }\n\n      // Creates a processing instruction node after the current node\n\n      // `target` instruction target\n      // `value` instruction value\n      instructionAfter(target, value) {\n        var child, i, removed;\n        // temporarily remove children starting *after* this\n        i = this.parent.children.indexOf(this);\n        removed = this.parent.children.splice(i + 1);\n        // add the new child\n        child = this.parent.instruction(target, value);\n        // add back removed children after new child\n        Array.prototype.push.apply(this.parent.children, removed);\n        return this;\n      }\n\n      // Creates the xml declaration\n\n      // `version` A version number string, e.g. 1.0\n      // `encoding` Encoding declaration, e.g. UTF-8\n      // `standalone` standalone document declaration: true or false\n      declaration(version, encoding, standalone) {\n        var doc, xmldec;\n        doc = this.document();\n        xmldec = new XMLDeclaration(doc, version, encoding, standalone);\n        // Replace XML declaration if exists, otherwise insert at top\n        if (doc.children.length === 0) {\n          doc.children.unshift(xmldec);\n        } else if (doc.children[0].type === NodeType.Declaration) {\n          doc.children[0] = xmldec;\n        } else {\n          doc.children.unshift(xmldec);\n        }\n        return doc.root() || doc;\n      }\n\n      // Creates the document type declaration\n\n      // `pubID` the public identifier of the external subset\n      // `sysID` the system identifier of the external subset\n      dtd(pubID, sysID) {\n        var child, doc, doctype, i, j, k, len, len1, ref1, ref2;\n        doc = this.document();\n        doctype = new XMLDocType(doc, pubID, sysID);\n        ref1 = doc.children;\n        // Replace DTD if exists\n        for (i = j = 0, len = ref1.length; j < len; i = ++j) {\n          child = ref1[i];\n          if (child.type === NodeType.DocType) {\n            doc.children[i] = doctype;\n            return doctype;\n          }\n        }\n        ref2 = doc.children;\n        // insert before root node if the root node exists\n        for (i = k = 0, len1 = ref2.length; k < len1; i = ++k) {\n          child = ref2[i];\n          if (child.isRoot) {\n            doc.children.splice(i, 0, doctype);\n            return doctype;\n          }\n        }\n        // otherwise append to end\n        doc.children.push(doctype);\n        return doctype;\n      }\n\n      // Gets the parent node\n      up() {\n        if (this.isRoot) {\n          throw new Error(\"The root node has no parent. Use doc() if you need to get the document object.\");\n        }\n        return this.parent;\n      }\n\n      // Gets the root node\n      root() {\n        var node;\n        node = this;\n        while (node) {\n          if (node.type === NodeType.Document) {\n            return node.rootObject;\n          } else if (node.isRoot) {\n            return node;\n          } else {\n            node = node.parent;\n          }\n        }\n      }\n\n      // Gets the node representing the XML document\n      document() {\n        var node;\n        node = this;\n        while (node) {\n          if (node.type === NodeType.Document) {\n            return node;\n          } else {\n            node = node.parent;\n          }\n        }\n      }\n\n      // Ends the document and converts string\n      end(options) {\n        return this.document().end(options);\n      }\n\n      // Gets the previous node\n      prev() {\n        var i;\n        i = this.parent.children.indexOf(this);\n        if (i < 1) {\n          throw new Error(\"Already at the first node. \" + this.debugInfo());\n        }\n        return this.parent.children[i - 1];\n      }\n\n      // Gets the next node\n      next() {\n        var i;\n        i = this.parent.children.indexOf(this);\n        if (i === -1 || i === this.parent.children.length - 1) {\n          throw new Error(\"Already at the last node. \" + this.debugInfo());\n        }\n        return this.parent.children[i + 1];\n      }\n\n      // Imports cloned root from another XML document\n\n      // `doc` the XML document to insert nodes from\n      importDocument(doc) {\n        var child, clonedRoot, j, len, ref1;\n        clonedRoot = doc.root().clone();\n        clonedRoot.parent = this;\n        clonedRoot.isRoot = false;\n        this.children.push(clonedRoot);\n        // set properties if imported element becomes the root node\n        if (this.type === NodeType.Document) {\n          clonedRoot.isRoot = true;\n          clonedRoot.documentObject = this;\n          this.rootObject = clonedRoot;\n          // set dtd name\n          if (this.children) {\n            ref1 = this.children;\n            for (j = 0, len = ref1.length; j < len; j++) {\n              child = ref1[j];\n              if (child.type === NodeType.DocType) {\n                child.name = clonedRoot.name;\n                break;\n              }\n            }\n          }\n        }\n        return this;\n      }\n\n      \n      // Returns debug string for this node\n      debugInfo(name) {\n        var ref1, ref2;\n        name = name || this.name;\n        if ((name == null) && !((ref1 = this.parent) != null ? ref1.name : void 0)) {\n          return \"\";\n        } else if (name == null) {\n          return \"parent: <\" + this.parent.name + \">\";\n        } else if (!((ref2 = this.parent) != null ? ref2.name : void 0)) {\n          return \"node: <\" + name + \">\";\n        } else {\n          return \"node: <\" + name + \">, parent: <\" + this.parent.name + \">\";\n        }\n      }\n\n      // Aliases\n      ele(name, attributes, text) {\n        return this.element(name, attributes, text);\n      }\n\n      nod(name, attributes, text) {\n        return this.node(name, attributes, text);\n      }\n\n      txt(value) {\n        return this.text(value);\n      }\n\n      dat(value) {\n        return this.cdata(value);\n      }\n\n      com(value) {\n        return this.comment(value);\n      }\n\n      ins(target, value) {\n        return this.instruction(target, value);\n      }\n\n      doc() {\n        return this.document();\n      }\n\n      dec(version, encoding, standalone) {\n        return this.declaration(version, encoding, standalone);\n      }\n\n      e(name, attributes, text) {\n        return this.element(name, attributes, text);\n      }\n\n      n(name, attributes, text) {\n        return this.node(name, attributes, text);\n      }\n\n      t(value) {\n        return this.text(value);\n      }\n\n      d(value) {\n        return this.cdata(value);\n      }\n\n      c(value) {\n        return this.comment(value);\n      }\n\n      r(value) {\n        return this.raw(value);\n      }\n\n      i(target, value) {\n        return this.instruction(target, value);\n      }\n\n      u() {\n        return this.up();\n      }\n\n      // can be deprecated in a future release\n      importXMLBuilder(doc) {\n        return this.importDocument(doc);\n      }\n\n      // Adds or modifies an attribute.\n\n      // `name` attribute name\n      // `value` attribute value\n      attribute(name, value) {\n        throw new Error(\"attribute() applies to element nodes only.\");\n      }\n\n      att(name, value) {\n        return this.attribute(name, value);\n      }\n\n      a(name, value) {\n        return this.attribute(name, value);\n      }\n\n      // Removes an attribute\n\n      // `name` attribute name\n      removeAttribute(name) {\n        throw new Error(\"attribute() applies to element nodes only.\");\n      }\n\n      // DOM level 1 functions to be implemented later\n      replaceChild(newChild, oldChild) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      removeChild(oldChild) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      appendChild(newChild) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      hasChildNodes() {\n        return this.children.length !== 0;\n      }\n\n      cloneNode(deep) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      normalize() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      // DOM level 2\n      isSupported(feature, version) {\n        return true;\n      }\n\n      hasAttributes() {\n        return this.attribs.length !== 0;\n      }\n\n      // DOM level 3 functions to be implemented later\n      compareDocumentPosition(other) {\n        var ref, res;\n        ref = this;\n        if (ref === other) {\n          return 0;\n        } else if (this.document() !== other.document()) {\n          res = DocumentPosition.Disconnected | DocumentPosition.ImplementationSpecific;\n          if (Math.random() < 0.5) {\n            res |= DocumentPosition.Preceding;\n          } else {\n            res |= DocumentPosition.Following;\n          }\n          return res;\n        } else if (ref.isAncestor(other)) {\n          return DocumentPosition.Contains | DocumentPosition.Preceding;\n        } else if (ref.isDescendant(other)) {\n          return DocumentPosition.Contains | DocumentPosition.Following;\n        } else if (ref.isPreceding(other)) {\n          return DocumentPosition.Preceding;\n        } else {\n          return DocumentPosition.Following;\n        }\n      }\n\n      isSameNode(other) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      lookupPrefix(namespaceURI) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      isDefaultNamespace(namespaceURI) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      lookupNamespaceURI(prefix) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      isEqualNode(node) {\n        var i, j, ref1;\n        if (node.nodeType !== this.nodeType) {\n          return false;\n        }\n        if (node.children.length !== this.children.length) {\n          return false;\n        }\n        for (i = j = 0, ref1 = this.children.length - 1; (0 <= ref1 ? j <= ref1 : j >= ref1); i = 0 <= ref1 ? ++j : --j) {\n          if (!this.children[i].isEqualNode(node.children[i])) {\n            return false;\n          }\n        }\n        return true;\n      }\n\n      getFeature(feature, version) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      setUserData(key, data, handler) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      getUserData(key) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      // Returns true if other is an inclusive descendant of node,\n      // and false otherwise.\n      contains(other) {\n        if (!other) {\n          return false;\n        }\n        return other === this || this.isDescendant(other);\n      }\n\n      // An object A is called a descendant of an object B, if either A is \n      // a child of B or A is a child of an object C that is a descendant of B.\n      isDescendant(node) {\n        var child, isDescendantChild, j, len, ref1;\n        ref1 = this.children;\n        for (j = 0, len = ref1.length; j < len; j++) {\n          child = ref1[j];\n          if (node === child) {\n            return true;\n          }\n          isDescendantChild = child.isDescendant(node);\n          if (isDescendantChild) {\n            return true;\n          }\n        }\n        return false;\n      }\n\n      // An object A is called an ancestor of an object B if and only if\n      // B is a descendant of A.\n      isAncestor(node) {\n        return node.isDescendant(this);\n      }\n\n      // An object A is preceding an object B if A and B are in the \n      // same tree and A comes before B in tree order.\n      isPreceding(node) {\n        var nodePos, thisPos;\n        nodePos = this.treePosition(node);\n        thisPos = this.treePosition(this);\n        if (nodePos === -1 || thisPos === -1) {\n          return false;\n        } else {\n          return nodePos < thisPos;\n        }\n      }\n\n      // An object A is folllowing an object B if A and B are in the \n      // same tree and A comes after B in tree order.\n      isFollowing(node) {\n        var nodePos, thisPos;\n        nodePos = this.treePosition(node);\n        thisPos = this.treePosition(this);\n        if (nodePos === -1 || thisPos === -1) {\n          return false;\n        } else {\n          return nodePos > thisPos;\n        }\n      }\n\n      // Returns the preorder position of the given node in the tree, or -1\n      // if the node is not in the tree.\n      treePosition(node) {\n        var found, pos;\n        pos = 0;\n        found = false;\n        this.foreachTreeNode(this.document(), function(childNode) {\n          pos++;\n          if (!found && childNode === node) {\n            return found = true;\n          }\n        });\n        if (found) {\n          return pos;\n        } else {\n          return -1;\n        }\n      }\n\n      \n      // Depth-first preorder traversal through the XML tree\n      foreachTreeNode(node, func) {\n        var child, j, len, ref1, res;\n        node || (node = this.document());\n        ref1 = node.children;\n        for (j = 0, len = ref1.length; j < len; j++) {\n          child = ref1[j];\n          if (res = func(child)) {\n            return res;\n          } else {\n            res = this.foreachTreeNode(child, func);\n            if (res) {\n              return res;\n            }\n          }\n        }\n      }\n\n    };\n\n    // DOM level 1\n    Object.defineProperty(XMLNode.prototype, 'nodeName', {\n      get: function() {\n        return this.name;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'nodeType', {\n      get: function() {\n        return this.type;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'nodeValue', {\n      get: function() {\n        return this.value;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'parentNode', {\n      get: function() {\n        return this.parent;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'childNodes', {\n      get: function() {\n        if (!this.childNodeList || !this.childNodeList.nodes) {\n          this.childNodeList = new XMLNodeList(this.children);\n        }\n        return this.childNodeList;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'firstChild', {\n      get: function() {\n        return this.children[0] || null;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'lastChild', {\n      get: function() {\n        return this.children[this.children.length - 1] || null;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'previousSibling', {\n      get: function() {\n        var i;\n        i = this.parent.children.indexOf(this);\n        return this.parent.children[i - 1] || null;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'nextSibling', {\n      get: function() {\n        var i;\n        i = this.parent.children.indexOf(this);\n        return this.parent.children[i + 1] || null;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'ownerDocument', {\n      get: function() {\n        return this.document() || null;\n      }\n    });\n\n    // DOM level 3\n    Object.defineProperty(XMLNode.prototype, 'textContent', {\n      get: function() {\n        var child, j, len, ref1, str;\n        if (this.nodeType === NodeType.Element || this.nodeType === NodeType.DocumentFragment) {\n          str = '';\n          ref1 = this.children;\n          for (j = 0, len = ref1.length; j < len; j++) {\n            child = ref1[j];\n            if (child.textContent) {\n              str += child.textContent;\n            }\n          }\n          return str;\n        } else {\n          return null;\n        }\n      },\n      set: function(value) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    return XMLNode;\n\n  }).call(this);\n\n}).call(this);\n","// Generated by CoffeeScript 2.4.1\n(function() {\n  // Copies all enumerable own properties from `sources` to `target`\n  var assign, getValue, isArray, isEmpty, isFunction, isObject, isPlainObject,\n    hasProp = {}.hasOwnProperty;\n\n  assign = function(target, ...sources) {\n    var i, key, len, source;\n    if (isFunction(Object.assign)) {\n      Object.assign.apply(null, arguments);\n    } else {\n      for (i = 0, len = sources.length; i < len; i++) {\n        source = sources[i];\n        if (source != null) {\n          for (key in source) {\n            if (!hasProp.call(source, key)) continue;\n            target[key] = source[key];\n          }\n        }\n      }\n    }\n    return target;\n  };\n\n  // Determines if `val` is a Function object\n  isFunction = function(val) {\n    return !!val && Object.prototype.toString.call(val) === '[object Function]';\n  };\n\n  // Determines if `val` is an Object\n  isObject = function(val) {\n    var ref;\n    return !!val && ((ref = typeof val) === 'function' || ref === 'object');\n  };\n\n  // Determines if `val` is an Array\n  isArray = function(val) {\n    if (isFunction(Array.isArray)) {\n      return Array.isArray(val);\n    } else {\n      return Object.prototype.toString.call(val) === '[object Array]';\n    }\n  };\n\n  // Determines if `val` is an empty Array or an Object with no own properties\n  isEmpty = function(val) {\n    var key;\n    if (isArray(val)) {\n      return !val.length;\n    } else {\n      for (key in val) {\n        if (!hasProp.call(val, key)) continue;\n        return false;\n      }\n      return true;\n    }\n  };\n\n  // Determines if `val` is a plain Object\n  isPlainObject = function(val) {\n    var ctor, proto;\n    return isObject(val) && (proto = Object.getPrototypeOf(val)) && (ctor = proto.constructor) && (typeof ctor === 'function') && (ctor instanceof ctor) && (Function.prototype.toString.call(ctor) === Function.prototype.toString.call(Object));\n  };\n\n  // Gets the primitive value of an object\n  getValue = function(obj) {\n    if (isFunction(obj.valueOf)) {\n      return obj.valueOf();\n    } else {\n      return obj;\n    }\n  };\n\n  module.exports.assign = assign;\n\n  module.exports.isFunction = isFunction;\n\n  module.exports.isObject = isObject;\n\n  module.exports.isArray = isArray;\n\n  module.exports.isEmpty = isEmpty;\n\n  module.exports.isPlainObject = isPlainObject;\n\n  module.exports.getValue = getValue;\n\n}).call(this);\n","// Generated by CoffeeScript 2.4.1\n(function() {\n  var XMLCharacterData, XMLNode;\n\n  XMLNode = require('./XMLNode');\n\n  // Represents a character data node\n  module.exports = XMLCharacterData = (function() {\n    class XMLCharacterData extends XMLNode {\n      // Initializes a new instance of `XMLCharacterData`\n\n      constructor(parent) {\n        super(parent);\n        this.value = '';\n      }\n\n      \n      // Creates and returns a deep clone of `this`\n      clone() {\n        return Object.create(this);\n      }\n\n      // DOM level 1 functions to be implemented later\n      substringData(offset, count) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      appendData(arg) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      insertData(offset, arg) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      deleteData(offset, count) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      replaceData(offset, count, arg) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      isEqualNode(node) {\n        if (!super.isEqualNode(node)) {\n          return false;\n        }\n        if (node.data !== this.data) {\n          return false;\n        }\n        return true;\n      }\n\n    };\n\n    // DOM level 1\n    Object.defineProperty(XMLCharacterData.prototype, 'data', {\n      get: function() {\n        return this.value;\n      },\n      set: function(value) {\n        return this.value = value || '';\n      }\n    });\n\n    Object.defineProperty(XMLCharacterData.prototype, 'length', {\n      get: function() {\n        return this.value.length;\n      }\n    });\n\n    // DOM level 3\n    Object.defineProperty(XMLCharacterData.prototype, 'textContent', {\n      get: function() {\n        return this.value;\n      },\n      set: function(value) {\n        return this.value = value || '';\n      }\n    });\n\n    return XMLCharacterData;\n\n  }).call(this);\n\n}).call(this);\n","// Generated by CoffeeScript 2.4.1\n(function() {\n  module.exports = {\n    None: 0,\n    OpenTag: 1,\n    InsideTag: 2,\n    CloseTag: 3\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 2.4.1\n(function() {\n  var NodeType, XMLAttribute, XMLElement, XMLNamedNodeMap, XMLNode, getValue, isFunction, isObject,\n    hasProp = {}.hasOwnProperty;\n\n  ({isObject, isFunction, getValue} = require('./Utility'));\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  XMLAttribute = require('./XMLAttribute');\n\n  XMLNamedNodeMap = require('./XMLNamedNodeMap');\n\n  // Represents an element of the XML document\n  module.exports = XMLElement = (function() {\n    class XMLElement extends XMLNode {\n      // Initializes a new instance of `XMLElement`\n\n      // `parent` the parent node\n      // `name` element name\n      // `attributes` an object containing name/value pairs of attributes\n      constructor(parent, name, attributes) {\n        var child, j, len, ref;\n        super(parent);\n        if (name == null) {\n          throw new Error(\"Missing element name. \" + this.debugInfo());\n        }\n        this.name = this.stringify.name(name);\n        this.type = NodeType.Element;\n        this.attribs = {};\n        this.schemaTypeInfo = null;\n        if (attributes != null) {\n          this.attribute(attributes);\n        }\n        // set properties if this is the root node\n        if (parent.type === NodeType.Document) {\n          this.isRoot = true;\n          this.documentObject = parent;\n          parent.rootObject = this;\n          // set dtd name\n          if (parent.children) {\n            ref = parent.children;\n            for (j = 0, len = ref.length; j < len; j++) {\n              child = ref[j];\n              if (child.type === NodeType.DocType) {\n                child.name = this.name;\n                break;\n              }\n            }\n          }\n        }\n      }\n\n      // Creates and returns a deep clone of `this`\n\n      clone() {\n        var att, attName, clonedSelf, ref;\n        clonedSelf = Object.create(this);\n        // remove document element\n        if (clonedSelf.isRoot) {\n          clonedSelf.documentObject = null;\n        }\n        // clone attributes\n        clonedSelf.attribs = {};\n        ref = this.attribs;\n        for (attName in ref) {\n          if (!hasProp.call(ref, attName)) continue;\n          att = ref[attName];\n          clonedSelf.attribs[attName] = att.clone();\n        }\n        // clone child nodes\n        clonedSelf.children = [];\n        this.children.forEach(function(child) {\n          var clonedChild;\n          clonedChild = child.clone();\n          clonedChild.parent = clonedSelf;\n          return clonedSelf.children.push(clonedChild);\n        });\n        return clonedSelf;\n      }\n\n      // Adds or modifies an attribute\n\n      // `name` attribute name\n      // `value` attribute value\n      attribute(name, value) {\n        var attName, attValue;\n        if (name != null) {\n          name = getValue(name);\n        }\n        if (isObject(name)) { // expand if object\n          for (attName in name) {\n            if (!hasProp.call(name, attName)) continue;\n            attValue = name[attName];\n            this.attribute(attName, attValue);\n          }\n        } else {\n          if (isFunction(value)) {\n            value = value.apply();\n          }\n          if (this.options.keepNullAttributes && (value == null)) {\n            this.attribs[name] = new XMLAttribute(this, name, \"\");\n          } else if (value != null) {\n            this.attribs[name] = new XMLAttribute(this, name, value);\n          }\n        }\n        return this;\n      }\n\n      // Removes an attribute\n\n      // `name` attribute name\n      removeAttribute(name) {\n        var attName, j, len;\n        // Also defined in DOM level 1\n        // removeAttribute(name) removes an attribute by name.\n        if (name == null) {\n          throw new Error(\"Missing attribute name. \" + this.debugInfo());\n        }\n        name = getValue(name);\n        if (Array.isArray(name)) { // expand if array\n          for (j = 0, len = name.length; j < len; j++) {\n            attName = name[j];\n            delete this.attribs[attName];\n          }\n        } else {\n          delete this.attribs[name];\n        }\n        return this;\n      }\n\n      // Converts the XML fragment to string\n\n      // `options.pretty` pretty prints the result\n      // `options.indent` indentation for pretty print\n      // `options.offset` how many indentations to add to every line for pretty print\n      // `options.newline` newline sequence for pretty print\n      // `options.allowEmpty` do not self close empty element tags\n      toString(options) {\n        return this.options.writer.element(this, this.options.writer.filterOptions(options));\n      }\n\n      // Aliases\n      att(name, value) {\n        return this.attribute(name, value);\n      }\n\n      a(name, value) {\n        return this.attribute(name, value);\n      }\n\n      // DOM Level 1\n      getAttribute(name) {\n        if (this.attribs.hasOwnProperty(name)) {\n          return this.attribs[name].value;\n        } else {\n          return null;\n        }\n      }\n\n      setAttribute(name, value) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      getAttributeNode(name) {\n        if (this.attribs.hasOwnProperty(name)) {\n          return this.attribs[name];\n        } else {\n          return null;\n        }\n      }\n\n      setAttributeNode(newAttr) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      removeAttributeNode(oldAttr) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      getElementsByTagName(name) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      // DOM Level 2\n      getAttributeNS(namespaceURI, localName) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      setAttributeNS(namespaceURI, qualifiedName, value) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      removeAttributeNS(namespaceURI, localName) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      getAttributeNodeNS(namespaceURI, localName) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      setAttributeNodeNS(newAttr) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      getElementsByTagNameNS(namespaceURI, localName) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      hasAttribute(name) {\n        return this.attribs.hasOwnProperty(name);\n      }\n\n      hasAttributeNS(namespaceURI, localName) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      // DOM Level 3\n      setIdAttribute(name, isId) {\n        if (this.attribs.hasOwnProperty(name)) {\n          return this.attribs[name].isId;\n        } else {\n          return isId;\n        }\n      }\n\n      setIdAttributeNS(namespaceURI, localName, isId) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      setIdAttributeNode(idAttr, isId) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      // DOM Level 4\n      getElementsByTagName(tagname) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      getElementsByTagNameNS(namespaceURI, localName) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      getElementsByClassName(classNames) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      isEqualNode(node) {\n        var i, j, ref;\n        if (!super.isEqualNode(node)) {\n          return false;\n        }\n        if (node.namespaceURI !== this.namespaceURI) {\n          return false;\n        }\n        if (node.prefix !== this.prefix) {\n          return false;\n        }\n        if (node.localName !== this.localName) {\n          return false;\n        }\n        if (node.attribs.length !== this.attribs.length) {\n          return false;\n        }\n        for (i = j = 0, ref = this.attribs.length - 1; (0 <= ref ? j <= ref : j >= ref); i = 0 <= ref ? ++j : --j) {\n          if (!this.attribs[i].isEqualNode(node.attribs[i])) {\n            return false;\n          }\n        }\n        return true;\n      }\n\n    };\n\n    // DOM level 1\n    Object.defineProperty(XMLElement.prototype, 'tagName', {\n      get: function() {\n        return this.name;\n      }\n    });\n\n    // DOM level 4\n    Object.defineProperty(XMLElement.prototype, 'namespaceURI', {\n      get: function() {\n        return '';\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'prefix', {\n      get: function() {\n        return '';\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'localName', {\n      get: function() {\n        return this.name;\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'id', {\n      get: function() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'className', {\n      get: function() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'classList', {\n      get: function() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'attributes', {\n      get: function() {\n        if (!this.attributeMap || !this.attributeMap.nodes) {\n          this.attributeMap = new XMLNamedNodeMap(this.attribs);\n        }\n        return this.attributeMap;\n      }\n    });\n\n    return XMLElement;\n\n  }).call(this);\n\n}).call(this);\n","// Generated by CoffeeScript 2.4.1\n(function() {\n  // Represents a map of nodes accessed by a string key\n  var XMLNamedNodeMap;\n\n  module.exports = XMLNamedNodeMap = (function() {\n    class XMLNamedNodeMap {\n      // Initializes a new instance of `XMLNamedNodeMap`\n      // This is just a wrapper around an ordinary\n      // JS object.\n\n      // `nodes` the object containing nodes.\n      constructor(nodes) {\n        this.nodes = nodes;\n      }\n\n      // Creates and returns a deep clone of `this`\n\n      clone() {\n        // this class should not be cloned since it wraps\n        // around a given object. The calling function should check\n        // whether the wrapped object is null and supply a new object\n        // (from the clone).\n        return this.nodes = null;\n      }\n\n      // DOM Level 1\n      getNamedItem(name) {\n        return this.nodes[name];\n      }\n\n      setNamedItem(node) {\n        var oldNode;\n        oldNode = this.nodes[node.nodeName];\n        this.nodes[node.nodeName] = node;\n        return oldNode || null;\n      }\n\n      removeNamedItem(name) {\n        var oldNode;\n        oldNode = this.nodes[name];\n        delete this.nodes[name];\n        return oldNode || null;\n      }\n\n      item(index) {\n        return this.nodes[Object.keys(this.nodes)[index]] || null;\n      }\n\n      // DOM level 2 functions to be implemented later\n      getNamedItemNS(namespaceURI, localName) {\n        throw new Error(\"This DOM method is not implemented.\");\n      }\n\n      setNamedItemNS(node) {\n        throw new Error(\"This DOM method is not implemented.\");\n      }\n\n      removeNamedItemNS(namespaceURI, localName) {\n        throw new Error(\"This DOM method is not implemented.\");\n      }\n\n    };\n\n    \n    // DOM level 1\n    Object.defineProperty(XMLNamedNodeMap.prototype, 'length', {\n      get: function() {\n        return Object.keys(this.nodes).length || 0;\n      }\n    });\n\n    return XMLNamedNodeMap;\n\n  }).call(this);\n\n}).call(this);\n","// Generated by CoffeeScript 2.4.1\n(function() {\n  var NodeType, XMLCData, XMLCharacterData;\n\n  NodeType = require('./NodeType');\n\n  XMLCharacterData = require('./XMLCharacterData');\n\n  // Represents a  CDATA node\n  module.exports = XMLCData = class XMLCData extends XMLCharacterData {\n    // Initializes a new instance of `XMLCData`\n\n    // `text` CDATA text\n    constructor(parent, text) {\n      super(parent);\n      if (text == null) {\n        throw new Error(\"Missing CDATA text. \" + this.debugInfo());\n      }\n      this.name = \"#cdata-section\";\n      this.type = NodeType.CData;\n      this.value = this.stringify.cdata(text);\n    }\n\n    // Creates and returns a deep clone of `this`\n    clone() {\n      return Object.create(this);\n    }\n\n    // Converts the XML fragment to string\n\n    // `options.pretty` pretty prints the result\n    // `options.indent` indentation for pretty print\n    // `options.offset` how many indentations to add to every line for pretty print\n    // `options.newline` newline sequence for pretty print\n    toString(options) {\n      return this.options.writer.cdata(this, this.options.writer.filterOptions(options));\n    }\n\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 2.4.1\n(function() {\n  var NodeType, XMLCharacterData, XMLComment;\n\n  NodeType = require('./NodeType');\n\n  XMLCharacterData = require('./XMLCharacterData');\n\n  // Represents a comment node\n  module.exports = XMLComment = class XMLComment extends XMLCharacterData {\n    // Initializes a new instance of `XMLComment`\n\n    // `text` comment text\n    constructor(parent, text) {\n      super(parent);\n      if (text == null) {\n        throw new Error(\"Missing comment text. \" + this.debugInfo());\n      }\n      this.name = \"#comment\";\n      this.type = NodeType.Comment;\n      this.value = this.stringify.comment(text);\n    }\n\n    // Creates and returns a deep clone of `this`\n    clone() {\n      return Object.create(this);\n    }\n\n    // Converts the XML fragment to string\n\n    // `options.pretty` pretty prints the result\n    // `options.indent` indentation for pretty print\n    // `options.offset` how many indentations to add to every line for pretty print\n    // `options.newline` newline sequence for pretty print\n    toString(options) {\n      return this.options.writer.comment(this, this.options.writer.filterOptions(options));\n    }\n\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 2.4.1\n(function() {\n  var NodeType, XMLDeclaration, XMLNode, isObject;\n\n  ({isObject} = require('./Utility'));\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  // Represents the XML declaration\n  module.exports = XMLDeclaration = class XMLDeclaration extends XMLNode {\n    // Initializes a new instance of `XMLDeclaration`\n\n    // `parent` the document object\n\n    // `version` A version number string, e.g. 1.0\n    // `encoding` Encoding declaration, e.g. UTF-8\n    // `standalone` standalone document declaration: true or false\n    constructor(parent, version, encoding, standalone) {\n      super(parent);\n      // arguments may also be passed as an object\n      if (isObject(version)) {\n        ({version, encoding, standalone} = version);\n      }\n      if (!version) {\n        version = '1.0';\n      }\n      this.type = NodeType.Declaration;\n      this.version = this.stringify.xmlVersion(version);\n      if (encoding != null) {\n        this.encoding = this.stringify.xmlEncoding(encoding);\n      }\n      if (standalone != null) {\n        this.standalone = this.stringify.xmlStandalone(standalone);\n      }\n    }\n\n    // Converts to string\n\n    // `options.pretty` pretty prints the result\n    // `options.indent` indentation for pretty print\n    // `options.offset` how many indentations to add to every line for pretty print\n    // `options.newline` newline sequence for pretty print\n    toString(options) {\n      return this.options.writer.declaration(this, this.options.writer.filterOptions(options));\n    }\n\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 2.4.1\n(function() {\n  var NodeType, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDocType, XMLNamedNodeMap, XMLNode, isObject;\n\n  ({isObject} = require('./Utility'));\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  XMLNamedNodeMap = require('./XMLNamedNodeMap');\n\n  // Represents doctype declaration\n  module.exports = XMLDocType = (function() {\n    class XMLDocType extends XMLNode {\n      // Initializes a new instance of `XMLDocType`\n\n      // `parent` the document object\n\n      // `pubID` public identifier of the external subset\n      // `sysID` system identifier of the external subset\n      constructor(parent, pubID, sysID) {\n        var child, i, len, ref;\n        super(parent);\n        this.type = NodeType.DocType;\n        // set DTD name to the name of the root node\n        if (parent.children) {\n          ref = parent.children;\n          for (i = 0, len = ref.length; i < len; i++) {\n            child = ref[i];\n            if (child.type === NodeType.Element) {\n              this.name = child.name;\n              break;\n            }\n          }\n        }\n        this.documentObject = parent;\n        // arguments may also be passed as an object\n        if (isObject(pubID)) {\n          ({pubID, sysID} = pubID);\n        }\n        if (sysID == null) {\n          [sysID, pubID] = [pubID, sysID];\n        }\n        if (pubID != null) {\n          this.pubID = this.stringify.dtdPubID(pubID);\n        }\n        if (sysID != null) {\n          this.sysID = this.stringify.dtdSysID(sysID);\n        }\n      }\n\n      // Creates an element type declaration\n\n      // `name` element name\n      // `value` element content (defaults to #PCDATA)\n      element(name, value) {\n        var child;\n        child = new XMLDTDElement(this, name, value);\n        this.children.push(child);\n        return this;\n      }\n\n      // Creates an attribute declaration\n\n      // `elementName` the name of the element containing this attribute\n      // `attributeName` attribute name\n      // `attributeType` type of the attribute (defaults to CDATA)\n      // `defaultValueType` default value type (either #REQUIRED, #IMPLIED, #FIXED or\n      //                    #DEFAULT) (defaults to #IMPLIED)\n      // `defaultValue` default value of the attribute\n      //                (only used for #FIXED or #DEFAULT)\n      attList(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n        var child;\n        child = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);\n        this.children.push(child);\n        return this;\n      }\n\n      // Creates a general entity declaration\n\n      // `name` the name of the entity\n      // `value` internal entity value or an object with external entity details\n      // `value.pubID` public identifier\n      // `value.sysID` system identifier\n      // `value.nData` notation declaration\n      entity(name, value) {\n        var child;\n        child = new XMLDTDEntity(this, false, name, value);\n        this.children.push(child);\n        return this;\n      }\n\n      // Creates a parameter entity declaration\n\n      // `name` the name of the entity\n      // `value` internal entity value or an object with external entity details\n      // `value.pubID` public identifier\n      // `value.sysID` system identifier\n      pEntity(name, value) {\n        var child;\n        child = new XMLDTDEntity(this, true, name, value);\n        this.children.push(child);\n        return this;\n      }\n\n      // Creates a NOTATION declaration\n\n      // `name` the name of the notation\n      // `value` an object with external entity details\n      // `value.pubID` public identifier\n      // `value.sysID` system identifier\n      notation(name, value) {\n        var child;\n        child = new XMLDTDNotation(this, name, value);\n        this.children.push(child);\n        return this;\n      }\n\n      // Converts to string\n\n      // `options.pretty` pretty prints the result\n      // `options.indent` indentation for pretty print\n      // `options.offset` how many indentations to add to every line for pretty print\n      // `options.newline` newline sequence for pretty print\n      toString(options) {\n        return this.options.writer.docType(this, this.options.writer.filterOptions(options));\n      }\n\n      // Aliases\n      ele(name, value) {\n        return this.element(name, value);\n      }\n\n      att(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n        return this.attList(elementName, attributeName, attributeType, defaultValueType, defaultValue);\n      }\n\n      ent(name, value) {\n        return this.entity(name, value);\n      }\n\n      pent(name, value) {\n        return this.pEntity(name, value);\n      }\n\n      not(name, value) {\n        return this.notation(name, value);\n      }\n\n      up() {\n        return this.root() || this.documentObject;\n      }\n\n      isEqualNode(node) {\n        if (!super.isEqualNode(node)) {\n          return false;\n        }\n        if (node.name !== this.name) {\n          return false;\n        }\n        if (node.publicId !== this.publicId) {\n          return false;\n        }\n        if (node.systemId !== this.systemId) {\n          return false;\n        }\n        return true;\n      }\n\n    };\n\n    // DOM level 1\n    Object.defineProperty(XMLDocType.prototype, 'entities', {\n      get: function() {\n        var child, i, len, nodes, ref;\n        nodes = {};\n        ref = this.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          if ((child.type === NodeType.EntityDeclaration) && !child.pe) {\n            nodes[child.name] = child;\n          }\n        }\n        return new XMLNamedNodeMap(nodes);\n      }\n    });\n\n    Object.defineProperty(XMLDocType.prototype, 'notations', {\n      get: function() {\n        var child, i, len, nodes, ref;\n        nodes = {};\n        ref = this.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          if (child.type === NodeType.NotationDeclaration) {\n            nodes[child.name] = child;\n          }\n        }\n        return new XMLNamedNodeMap(nodes);\n      }\n    });\n\n    // DOM level 2\n    Object.defineProperty(XMLDocType.prototype, 'publicId', {\n      get: function() {\n        return this.pubID;\n      }\n    });\n\n    Object.defineProperty(XMLDocType.prototype, 'systemId', {\n      get: function() {\n        return this.sysID;\n      }\n    });\n\n    Object.defineProperty(XMLDocType.prototype, 'internalSubset', {\n      get: function() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    return XMLDocType;\n\n  }).call(this);\n\n}).call(this);\n","// Generated by CoffeeScript 2.4.1\n(function() {\n  var NodeType, XMLDTDAttList, XMLNode;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  // Represents an attribute list\n  module.exports = XMLDTDAttList = class XMLDTDAttList extends XMLNode {\n    // Initializes a new instance of `XMLDTDAttList`\n\n    // `parent` the parent `XMLDocType` element\n    // `elementName` the name of the element containing this attribute\n    // `attributeName` attribute name\n    // `attributeType` type of the attribute\n    // `defaultValueType` default value type (either #REQUIRED, #IMPLIED,\n    //                    #FIXED or #DEFAULT)\n    // `defaultValue` default value of the attribute\n    //                (only used for #FIXED or #DEFAULT)\n    constructor(parent, elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      super(parent);\n      if (elementName == null) {\n        throw new Error(\"Missing DTD element name. \" + this.debugInfo());\n      }\n      if (attributeName == null) {\n        throw new Error(\"Missing DTD attribute name. \" + this.debugInfo(elementName));\n      }\n      if (!attributeType) {\n        throw new Error(\"Missing DTD attribute type. \" + this.debugInfo(elementName));\n      }\n      if (!defaultValueType) {\n        throw new Error(\"Missing DTD attribute default. \" + this.debugInfo(elementName));\n      }\n      if (defaultValueType.indexOf('#') !== 0) {\n        defaultValueType = '#' + defaultValueType;\n      }\n      if (!defaultValueType.match(/^(#REQUIRED|#IMPLIED|#FIXED|#DEFAULT)$/)) {\n        throw new Error(\"Invalid default value type; expected: #REQUIRED, #IMPLIED, #FIXED or #DEFAULT. \" + this.debugInfo(elementName));\n      }\n      if (defaultValue && !defaultValueType.match(/^(#FIXED|#DEFAULT)$/)) {\n        throw new Error(\"Default value only applies to #FIXED or #DEFAULT. \" + this.debugInfo(elementName));\n      }\n      this.elementName = this.stringify.name(elementName);\n      this.type = NodeType.AttributeDeclaration;\n      this.attributeName = this.stringify.name(attributeName);\n      this.attributeType = this.stringify.dtdAttType(attributeType);\n      if (defaultValue) {\n        this.defaultValue = this.stringify.dtdAttDefault(defaultValue);\n      }\n      this.defaultValueType = defaultValueType;\n    }\n\n    // Converts the XML fragment to string\n\n    // `options.pretty` pretty prints the result\n    // `options.indent` indentation for pretty print\n    // `options.offset` how many indentations to add to every line for pretty print\n    // `options.newline` newline sequence for pretty print\n    toString(options) {\n      return this.options.writer.dtdAttList(this, this.options.writer.filterOptions(options));\n    }\n\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 2.4.1\n(function() {\n  var NodeType, XMLDTDEntity, XMLNode, isObject;\n\n  ({isObject} = require('./Utility'));\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  // Represents an entity declaration in the DTD\n  module.exports = XMLDTDEntity = (function() {\n    class XMLDTDEntity extends XMLNode {\n      // Initializes a new instance of `XMLDTDEntity`\n\n      // `parent` the parent `XMLDocType` element\n      // `pe` whether this is a parameter entity or a general entity\n      //      defaults to `false` (general entity)\n      // `name` the name of the entity\n      // `value` internal entity value or an object with external entity details\n      // `value.pubID` public identifier\n      // `value.sysID` system identifier\n      // `value.nData` notation declaration\n      constructor(parent, pe, name, value) {\n        super(parent);\n        if (name == null) {\n          throw new Error(\"Missing DTD entity name. \" + this.debugInfo(name));\n        }\n        if (value == null) {\n          throw new Error(\"Missing DTD entity value. \" + this.debugInfo(name));\n        }\n        this.pe = !!pe;\n        this.name = this.stringify.name(name);\n        this.type = NodeType.EntityDeclaration;\n        if (!isObject(value)) {\n          this.value = this.stringify.dtdEntityValue(value);\n          this.internal = true;\n        } else {\n          if (!value.pubID && !value.sysID) {\n            throw new Error(\"Public and/or system identifiers are required for an external entity. \" + this.debugInfo(name));\n          }\n          if (value.pubID && !value.sysID) {\n            throw new Error(\"System identifier is required for a public external entity. \" + this.debugInfo(name));\n          }\n          this.internal = false;\n          if (value.pubID != null) {\n            this.pubID = this.stringify.dtdPubID(value.pubID);\n          }\n          if (value.sysID != null) {\n            this.sysID = this.stringify.dtdSysID(value.sysID);\n          }\n          if (value.nData != null) {\n            this.nData = this.stringify.dtdNData(value.nData);\n          }\n          if (this.pe && this.nData) {\n            throw new Error(\"Notation declaration is not allowed in a parameter entity. \" + this.debugInfo(name));\n          }\n        }\n      }\n\n      // Converts the XML fragment to string\n\n      // `options.pretty` pretty prints the result\n      // `options.indent` indentation for pretty print\n      // `options.offset` how many indentations to add to every line for pretty print\n      // `options.newline` newline sequence for pretty print\n      toString(options) {\n        return this.options.writer.dtdEntity(this, this.options.writer.filterOptions(options));\n      }\n\n    };\n\n    // DOM level 1\n    Object.defineProperty(XMLDTDEntity.prototype, 'publicId', {\n      get: function() {\n        return this.pubID;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'systemId', {\n      get: function() {\n        return this.sysID;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'notationName', {\n      get: function() {\n        return this.nData || null;\n      }\n    });\n\n    // DOM level 3\n    Object.defineProperty(XMLDTDEntity.prototype, 'inputEncoding', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'xmlEncoding', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'xmlVersion', {\n      get: function() {\n        return null;\n      }\n    });\n\n    return XMLDTDEntity;\n\n  }).call(this);\n\n}).call(this);\n","// Generated by CoffeeScript 2.4.1\n(function() {\n  var NodeType, XMLDTDElement, XMLNode;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  // Represents an attribute\n  module.exports = XMLDTDElement = class XMLDTDElement extends XMLNode {\n    // Initializes a new instance of `XMLDTDElement`\n\n    // `parent` the parent `XMLDocType` element\n    // `name` element name\n    // `value` element content (defaults to #PCDATA)\n    constructor(parent, name, value) {\n      super(parent);\n      if (name == null) {\n        throw new Error(\"Missing DTD element name. \" + this.debugInfo());\n      }\n      if (!value) {\n        value = '(#PCDATA)';\n      }\n      if (Array.isArray(value)) {\n        value = '(' + value.join(',') + ')';\n      }\n      this.name = this.stringify.name(name);\n      this.type = NodeType.ElementDeclaration;\n      this.value = this.stringify.dtdElementValue(value);\n    }\n\n    // Converts the XML fragment to string\n\n    // `options.pretty` pretty prints the result\n    // `options.indent` indentation for pretty print\n    // `options.offset` how many indentations to add to every line for pretty print\n    // `options.newline` newline sequence for pretty print\n    toString(options) {\n      return this.options.writer.dtdElement(this, this.options.writer.filterOptions(options));\n    }\n\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 2.4.1\n(function() {\n  var NodeType, XMLDTDNotation, XMLNode;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  // Represents a NOTATION entry in the DTD\n  module.exports = XMLDTDNotation = (function() {\n    class XMLDTDNotation extends XMLNode {\n      // Initializes a new instance of `XMLDTDNotation`\n\n      // `parent` the parent `XMLDocType` element\n      // `name` the name of the notation\n      // `value` an object with external entity details\n      // `value.pubID` public identifier\n      // `value.sysID` system identifier\n      constructor(parent, name, value) {\n        super(parent);\n        if (name == null) {\n          throw new Error(\"Missing DTD notation name. \" + this.debugInfo(name));\n        }\n        if (!value.pubID && !value.sysID) {\n          throw new Error(\"Public or system identifiers are required for an external entity. \" + this.debugInfo(name));\n        }\n        this.name = this.stringify.name(name);\n        this.type = NodeType.NotationDeclaration;\n        if (value.pubID != null) {\n          this.pubID = this.stringify.dtdPubID(value.pubID);\n        }\n        if (value.sysID != null) {\n          this.sysID = this.stringify.dtdSysID(value.sysID);\n        }\n      }\n\n      // Converts the XML fragment to string\n\n      // `options.pretty` pretty prints the result\n      // `options.indent` indentation for pretty print\n      // `options.offset` how many indentations to add to every line for pretty print\n      // `options.newline` newline sequence for pretty print\n      toString(options) {\n        return this.options.writer.dtdNotation(this, this.options.writer.filterOptions(options));\n      }\n\n    };\n\n    // DOM level 1\n    Object.defineProperty(XMLDTDNotation.prototype, 'publicId', {\n      get: function() {\n        return this.pubID;\n      }\n    });\n\n    Object.defineProperty(XMLDTDNotation.prototype, 'systemId', {\n      get: function() {\n        return this.sysID;\n      }\n    });\n\n    return XMLDTDNotation;\n\n  }).call(this);\n\n}).call(this);\n","// Generated by CoffeeScript 2.4.1\n(function() {\n  var NodeType, XMLNode, XMLRaw;\n\n  NodeType = require('./NodeType');\n\n  XMLNode = require('./XMLNode');\n\n  // Represents a  raw node\n  module.exports = XMLRaw = class XMLRaw extends XMLNode {\n    // Initializes a new instance of `XMLRaw`\n\n    // `text` raw text\n    constructor(parent, text) {\n      super(parent);\n      if (text == null) {\n        throw new Error(\"Missing raw text. \" + this.debugInfo());\n      }\n      this.type = NodeType.Raw;\n      this.value = this.stringify.raw(text);\n    }\n\n    // Creates and returns a deep clone of `this`\n    clone() {\n      return Object.create(this);\n    }\n\n    // Converts the XML fragment to string\n\n    // `options.pretty` pretty prints the result\n    // `options.indent` indentation for pretty print\n    // `options.offset` how many indentations to add to every line for pretty print\n    // `options.newline` newline sequence for pretty print\n    toString(options) {\n      return this.options.writer.raw(this, this.options.writer.filterOptions(options));\n    }\n\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 2.4.1\n(function() {\n  var NodeType, XMLCharacterData, XMLText;\n\n  NodeType = require('./NodeType');\n\n  XMLCharacterData = require('./XMLCharacterData');\n\n  // Represents a text node\n  module.exports = XMLText = (function() {\n    class XMLText extends XMLCharacterData {\n      // Initializes a new instance of `XMLText`\n\n      // `text` element text\n      constructor(parent, text) {\n        super(parent);\n        if (text == null) {\n          throw new Error(\"Missing element text. \" + this.debugInfo());\n        }\n        this.name = \"#text\";\n        this.type = NodeType.Text;\n        this.value = this.stringify.text(text);\n      }\n\n      // Creates and returns a deep clone of `this`\n      clone() {\n        return Object.create(this);\n      }\n\n      // Converts the XML fragment to string\n\n      // `options.pretty` pretty prints the result\n      // `options.indent` indentation for pretty print\n      // `options.offset` how many indentations to add to every line for pretty print\n      // `options.newline` newline sequence for pretty print\n      toString(options) {\n        return this.options.writer.text(this, this.options.writer.filterOptions(options));\n      }\n\n      // DOM level 1 functions to be implemented later\n      splitText(offset) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      // DOM level 3 functions to be implemented later\n      replaceWholeText(content) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n    };\n\n    // DOM level 3\n    Object.defineProperty(XMLText.prototype, 'isElementContentWhitespace', {\n      get: function() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    Object.defineProperty(XMLText.prototype, 'wholeText', {\n      get: function() {\n        var next, prev, str;\n        str = '';\n        prev = this.previousSibling;\n        while (prev) {\n          str = prev.data + str;\n          prev = prev.previousSibling;\n        }\n        str += this.data;\n        next = this.nextSibling;\n        while (next) {\n          str = str + next.data;\n          next = next.nextSibling;\n        }\n        return str;\n      }\n    });\n\n    return XMLText;\n\n  }).call(this);\n\n}).call(this);\n","// Generated by CoffeeScript 2.4.1\n(function() {\n  var NodeType, XMLCharacterData, XMLProcessingInstruction;\n\n  NodeType = require('./NodeType');\n\n  XMLCharacterData = require('./XMLCharacterData');\n\n  // Represents a processing instruction\n  module.exports = XMLProcessingInstruction = class XMLProcessingInstruction extends XMLCharacterData {\n    // Initializes a new instance of `XMLProcessingInstruction`\n\n    // `parent` the parent node\n    // `target` instruction target\n    // `value` instruction value\n    constructor(parent, target, value) {\n      super(parent);\n      if (target == null) {\n        throw new Error(\"Missing instruction target. \" + this.debugInfo());\n      }\n      this.type = NodeType.ProcessingInstruction;\n      this.target = this.stringify.insTarget(target);\n      this.name = this.target;\n      if (value) {\n        this.value = this.stringify.insValue(value);\n      }\n    }\n\n    // Creates and returns a deep clone of `this`\n    clone() {\n      return Object.create(this);\n    }\n\n    // Converts the XML fragment to string\n\n    // `options.pretty` pretty prints the result\n    // `options.indent` indentation for pretty print\n    // `options.offset` how many indentations to add to every line for pretty print\n    // `options.newline` newline sequence for pretty print\n    toString(options) {\n      return this.options.writer.processingInstruction(this, this.options.writer.filterOptions(options));\n    }\n\n    isEqualNode(node) {\n      if (!super.isEqualNode(node)) {\n        return false;\n      }\n      if (node.target !== this.target) {\n        return false;\n      }\n      return true;\n    }\n\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 2.4.1\n(function() {\n  var XMLStringWriter, XMLWriterBase;\n\n  XMLWriterBase = require('./XMLWriterBase');\n\n  // Prints XML nodes as plain text\n  module.exports = XMLStringWriter = class XMLStringWriter extends XMLWriterBase {\n    // Initializes a new instance of `XMLStringWriter`\n\n    // `options.pretty` pretty prints the result\n    // `options.indent` indentation string\n    // `options.newline` newline sequence\n    // `options.offset` a fixed number of indentations to add to every line\n    // `options.allowEmpty` do not self close empty element tags\n    // 'options.dontPrettyTextNodes' if any text is present in node, don't indent or LF\n    // `options.spaceBeforeSlash` add a space before the closing slash of empty elements\n    constructor(options) {\n      super(options);\n    }\n\n    document(doc, options) {\n      var child, i, len, r, ref;\n      options = this.filterOptions(options);\n      r = '';\n      ref = doc.children;\n      for (i = 0, len = ref.length; i < len; i++) {\n        child = ref[i];\n        r += this.writeChildNode(child, options, 0);\n      }\n      // remove trailing newline\n      if (options.pretty && r.slice(-options.newline.length) === options.newline) {\n        r = r.slice(0, -options.newline.length);\n      }\n      return r;\n    }\n\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 2.4.1\n(function() {\n  // Implements the DOMImplementation interface\n  var XMLDOMImplementation;\n\n  module.exports = XMLDOMImplementation = class XMLDOMImplementation {\n    // Tests if the DOM implementation implements a specific feature.\n\n    // `feature` package name of the feature to test. In Level 1, the\n    //           legal values are \"HTML\" and \"XML\" (case-insensitive).\n    // `version` version number of the package name to test. \n    //           In Level 1, this is the string \"1.0\". If the version is \n    //           not specified, supporting any version of the feature will \n    //           cause the method to return true.\n    hasFeature(feature, version) {\n      return true;\n    }\n\n    // Creates a new document type declaration.\n\n    // `qualifiedName` qualified name of the document type to be created\n    // `publicId` public identifier of the external subset\n    // `systemId` system identifier of the external subset\n    createDocumentType(qualifiedName, publicId, systemId) {\n      throw new Error(\"This DOM method is not implemented.\");\n    }\n\n    // Creates a new document.\n\n    // `namespaceURI` namespace URI of the document element to create\n    // `qualifiedName` the qualified name of the document to be created\n    // `doctype` the type of document to be created or null\n    createDocument(namespaceURI, qualifiedName, doctype) {\n      throw new Error(\"This DOM method is not implemented.\");\n    }\n\n    // Creates a new HTML document.\n\n    // `title` document title\n    createHTMLDocument(title) {\n      throw new Error(\"This DOM method is not implemented.\");\n    }\n\n    // Returns a specialized object which implements the specialized APIs \n    // of the specified feature and version.\n\n    // `feature` name of the feature requested.\n    // `version` version number of the feature to test\n    getFeature(feature, version) {\n      throw new Error(\"This DOM method is not implemented.\");\n    }\n\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 2.4.1\n(function() {\n  var NodeType, XMLDOMConfiguration, XMLDOMImplementation, XMLDocument, XMLNode, XMLStringWriter, XMLStringifier, isPlainObject;\n\n  ({isPlainObject} = require('./Utility'));\n\n  XMLDOMImplementation = require('./XMLDOMImplementation');\n\n  XMLDOMConfiguration = require('./XMLDOMConfiguration');\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  XMLStringifier = require('./XMLStringifier');\n\n  XMLStringWriter = require('./XMLStringWriter');\n\n  // Represents an XML builder\n  module.exports = XMLDocument = (function() {\n    class XMLDocument extends XMLNode {\n      // Initializes a new instance of `XMLDocument`\n\n      // `options.keepNullNodes` whether nodes with null values will be kept\n      //     or ignored: true or false\n      // `options.keepNullAttributes` whether attributes with null values will be\n      //     kept or ignored: true or false\n      // `options.ignoreDecorators` whether decorator strings will be ignored when\n      //     converting JS objects: true or false\n      // `options.separateArrayItems` whether array items are created as separate\n      //     nodes when passed as an object value: true or false\n      // `options.noDoubleEncoding` whether existing html entities are encoded:\n      //     true or false\n      // `options.stringify` a set of functions to use for converting values to\n      //     strings\n      // `options.writer` the default XML writer to use for converting nodes to\n      //     string. If the default writer is not set, the built-in XMLStringWriter\n      //     will be used instead.\n      constructor(options) {\n        super(null);\n        this.name = \"#document\";\n        this.type = NodeType.Document;\n        this.documentURI = null;\n        this.domConfig = new XMLDOMConfiguration();\n        options || (options = {});\n        if (!options.writer) {\n          options.writer = new XMLStringWriter();\n        }\n        this.options = options;\n        this.stringify = new XMLStringifier(options);\n      }\n\n      // Ends the document and passes it to the given XML writer\n\n      // `writer` is either an XML writer or a plain object to pass to the\n      // constructor of the default XML writer. The default writer is assigned when\n      // creating the XML document. Following flags are recognized by the\n      // built-in XMLStringWriter:\n      //   `writer.pretty` pretty prints the result\n      //   `writer.indent` indentation for pretty print\n      //   `writer.offset` how many indentations to add to every line for pretty print\n      //   `writer.newline` newline sequence for pretty print\n      end(writer) {\n        var writerOptions;\n        writerOptions = {};\n        if (!writer) {\n          writer = this.options.writer;\n        } else if (isPlainObject(writer)) {\n          writerOptions = writer;\n          writer = this.options.writer;\n        }\n        return writer.document(this, writer.filterOptions(writerOptions));\n      }\n\n      // Converts the XML document to string\n\n      // `options.pretty` pretty prints the result\n      // `options.indent` indentation for pretty print\n      // `options.offset` how many indentations to add to every line for pretty print\n      // `options.newline` newline sequence for pretty print\n      toString(options) {\n        return this.options.writer.document(this, this.options.writer.filterOptions(options));\n      }\n\n      // DOM level 1 functions to be implemented later\n      createElement(tagName) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      createDocumentFragment() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      createTextNode(data) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      createComment(data) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      createCDATASection(data) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      createProcessingInstruction(target, data) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      createAttribute(name) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      createEntityReference(name) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      getElementsByTagName(tagname) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      // DOM level 2 functions to be implemented later\n      importNode(importedNode, deep) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      createElementNS(namespaceURI, qualifiedName) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      createAttributeNS(namespaceURI, qualifiedName) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      getElementsByTagNameNS(namespaceURI, localName) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      getElementById(elementId) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      // DOM level 3 functions to be implemented later\n      adoptNode(source) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      normalizeDocument() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      renameNode(node, namespaceURI, qualifiedName) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      // DOM level 4 functions to be implemented later\n      getElementsByClassName(classNames) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      createEvent(eventInterface) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      createRange() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      createNodeIterator(root, whatToShow, filter) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      createTreeWalker(root, whatToShow, filter) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n    };\n\n    // DOM level 1\n    Object.defineProperty(XMLDocument.prototype, 'implementation', {\n      value: new XMLDOMImplementation()\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'doctype', {\n      get: function() {\n        var child, i, len, ref;\n        ref = this.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          if (child.type === NodeType.DocType) {\n            return child;\n          }\n        }\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'documentElement', {\n      get: function() {\n        return this.rootObject || null;\n      }\n    });\n\n    // DOM level 3\n    Object.defineProperty(XMLDocument.prototype, 'inputEncoding', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'strictErrorChecking', {\n      get: function() {\n        return false;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'xmlEncoding', {\n      get: function() {\n        if (this.children.length !== 0 && this.children[0].type === NodeType.Declaration) {\n          return this.children[0].encoding;\n        } else {\n          return null;\n        }\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'xmlStandalone', {\n      get: function() {\n        if (this.children.length !== 0 && this.children[0].type === NodeType.Declaration) {\n          return this.children[0].standalone === 'yes';\n        } else {\n          return false;\n        }\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'xmlVersion', {\n      get: function() {\n        if (this.children.length !== 0 && this.children[0].type === NodeType.Declaration) {\n          return this.children[0].version;\n        } else {\n          return \"1.0\";\n        }\n      }\n    });\n\n    // DOM level 4\n    Object.defineProperty(XMLDocument.prototype, 'URL', {\n      get: function() {\n        return this.documentURI;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'origin', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'compatMode', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'characterSet', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'contentType', {\n      get: function() {\n        return null;\n      }\n    });\n\n    return XMLDocument;\n\n  }).call(this);\n\n}).call(this);\n","// Generated by CoffeeScript 2.4.1\n(function() {\n  var NodeType, XMLAttribute, XMLNode;\n\n  NodeType = require('./NodeType');\n\n  XMLNode = require('./XMLNode');\n\n  // Represents an attribute\n  module.exports = XMLAttribute = (function() {\n    class XMLAttribute {\n      // Initializes a new instance of `XMLAttribute`\n\n      // `parent` the parent node\n      // `name` attribute target\n      // `value` attribute value\n      constructor(parent, name, value) {\n        this.parent = parent;\n        if (this.parent) {\n          this.options = this.parent.options;\n          this.stringify = this.parent.stringify;\n        }\n        if (name == null) {\n          throw new Error(\"Missing attribute name. \" + this.debugInfo(name));\n        }\n        this.name = this.stringify.name(name);\n        this.value = this.stringify.attValue(value);\n        this.type = NodeType.Attribute;\n        // DOM level 3\n        this.isId = false;\n        this.schemaTypeInfo = null;\n      }\n\n      // Creates and returns a deep clone of `this`\n      clone() {\n        return Object.create(this);\n      }\n\n      // Converts the XML fragment to string\n\n      // `options.pretty` pretty prints the result\n      // `options.indent` indentation for pretty print\n      // `options.offset` how many indentations to add to every line for pretty print\n      // `options.newline` newline sequence for pretty print\n      toString(options) {\n        return this.options.writer.attribute(this, this.options.writer.filterOptions(options));\n      }\n\n      \n      // Returns debug string for this node\n      debugInfo(name) {\n        name = name || this.name;\n        if (name == null) {\n          return \"parent: <\" + this.parent.name + \">\";\n        } else {\n          return \"attribute: {\" + name + \"}, parent: <\" + this.parent.name + \">\";\n        }\n      }\n\n      isEqualNode(node) {\n        if (node.namespaceURI !== this.namespaceURI) {\n          return false;\n        }\n        if (node.prefix !== this.prefix) {\n          return false;\n        }\n        if (node.localName !== this.localName) {\n          return false;\n        }\n        if (node.value !== this.value) {\n          return false;\n        }\n        return true;\n      }\n\n    };\n\n    // DOM level 1\n    Object.defineProperty(XMLAttribute.prototype, 'nodeType', {\n      get: function() {\n        return this.type;\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'ownerElement', {\n      get: function() {\n        return this.parent;\n      }\n    });\n\n    // DOM level 3\n    Object.defineProperty(XMLAttribute.prototype, 'textContent', {\n      get: function() {\n        return this.value;\n      },\n      set: function(value) {\n        return this.value = value || '';\n      }\n    });\n\n    // DOM level 4\n    Object.defineProperty(XMLAttribute.prototype, 'namespaceURI', {\n      get: function() {\n        return '';\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'prefix', {\n      get: function() {\n        return '';\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'localName', {\n      get: function() {\n        return this.name;\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'specified', {\n      get: function() {\n        return true;\n      }\n    });\n\n    return XMLAttribute;\n\n  }).call(this);\n\n}).call(this);\n","// Generated by CoffeeScript 2.4.1\n(function() {\n  var NodeType, XMLDummy, XMLNode;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  // Represents a  raw node\n  module.exports = XMLDummy = class XMLDummy extends XMLNode {\n    // Initializes a new instance of `XMLDummy`\n\n    // `XMLDummy` is a special node representing a node with \n    // a null value. Dummy nodes are created while recursively\n    // building the XML tree. Simply skipping null values doesn't\n    // work because that would break the recursive chain.\n    constructor(parent) {\n      super(parent);\n      this.type = NodeType.Dummy;\n    }\n\n    // Creates and returns a deep clone of `this`\n    clone() {\n      return Object.create(this);\n    }\n\n    // Converts the XML fragment to string\n\n    // `options.pretty` pretty prints the result\n    // `options.indent` indentation for pretty print\n    // `options.offset` how many indentations to add to every line for pretty print\n    // `options.newline` newline sequence for pretty print\n    toString(options) {\n      return '';\n    }\n\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 2.4.1\n(function() {\n  // Converts values to strings\n  var XMLStringifier,\n    hasProp = {}.hasOwnProperty;\n\n  module.exports = XMLStringifier = (function() {\n    class XMLStringifier {\n      // Initializes a new instance of `XMLStringifier`\n\n      // `options.version` The version number string of the XML spec to validate against, e.g. 1.0\n      // `options.noDoubleEncoding` whether existing html entities are encoded: true or false\n      // `options.stringify` a set of functions to use for converting values to strings\n      // `options.noValidation` whether values will be validated and escaped or returned as is\n      constructor(options) {\n        var key, ref, value;\n        // Checks whether the given string contains legal characters\n        // Fails with an exception on error\n\n        // `str` the string to check\n        this.assertLegalChar = this.assertLegalChar.bind(this);\n        // Checks whether the given string contains legal characters for a name\n        // Fails with an exception on error\n\n        // `str` the string to check\n        this.assertLegalName = this.assertLegalName.bind(this);\n        options || (options = {});\n        this.options = options;\n        if (!this.options.version) {\n          this.options.version = '1.0';\n        }\n        ref = options.stringify || {};\n        for (key in ref) {\n          if (!hasProp.call(ref, key)) continue;\n          value = ref[key];\n          this[key] = value;\n        }\n      }\n\n      // Defaults\n      name(val) {\n        if (this.options.noValidation) {\n          return val;\n        }\n        return this.assertLegalName('' + val || '');\n      }\n\n      text(val) {\n        if (this.options.noValidation) {\n          return val;\n        }\n        return this.assertLegalChar(this.textEscape('' + val || ''));\n      }\n\n      cdata(val) {\n        if (this.options.noValidation) {\n          return val;\n        }\n        val = '' + val || '';\n        val = val.replace(']]>', ']]]]><![CDATA[>');\n        return this.assertLegalChar(val);\n      }\n\n      comment(val) {\n        if (this.options.noValidation) {\n          return val;\n        }\n        val = '' + val || '';\n        if (val.match(/--/)) {\n          throw new Error(\"Comment text cannot contain double-hypen: \" + val);\n        }\n        return this.assertLegalChar(val);\n      }\n\n      raw(val) {\n        if (this.options.noValidation) {\n          return val;\n        }\n        return '' + val || '';\n      }\n\n      attValue(val) {\n        if (this.options.noValidation) {\n          return val;\n        }\n        return this.assertLegalChar(this.attEscape(val = '' + val || ''));\n      }\n\n      insTarget(val) {\n        if (this.options.noValidation) {\n          return val;\n        }\n        return this.assertLegalChar('' + val || '');\n      }\n\n      insValue(val) {\n        if (this.options.noValidation) {\n          return val;\n        }\n        val = '' + val || '';\n        if (val.match(/\\?>/)) {\n          throw new Error(\"Invalid processing instruction value: \" + val);\n        }\n        return this.assertLegalChar(val);\n      }\n\n      xmlVersion(val) {\n        if (this.options.noValidation) {\n          return val;\n        }\n        val = '' + val || '';\n        if (!val.match(/1\\.[0-9]+/)) {\n          throw new Error(\"Invalid version number: \" + val);\n        }\n        return val;\n      }\n\n      xmlEncoding(val) {\n        if (this.options.noValidation) {\n          return val;\n        }\n        val = '' + val || '';\n        if (!val.match(/^[A-Za-z](?:[A-Za-z0-9._-])*$/)) {\n          throw new Error(\"Invalid encoding: \" + val);\n        }\n        return this.assertLegalChar(val);\n      }\n\n      xmlStandalone(val) {\n        if (this.options.noValidation) {\n          return val;\n        }\n        if (val) {\n          return \"yes\";\n        } else {\n          return \"no\";\n        }\n      }\n\n      dtdPubID(val) {\n        if (this.options.noValidation) {\n          return val;\n        }\n        return this.assertLegalChar('' + val || '');\n      }\n\n      dtdSysID(val) {\n        if (this.options.noValidation) {\n          return val;\n        }\n        return this.assertLegalChar('' + val || '');\n      }\n\n      dtdElementValue(val) {\n        if (this.options.noValidation) {\n          return val;\n        }\n        return this.assertLegalChar('' + val || '');\n      }\n\n      dtdAttType(val) {\n        if (this.options.noValidation) {\n          return val;\n        }\n        return this.assertLegalChar('' + val || '');\n      }\n\n      dtdAttDefault(val) {\n        if (this.options.noValidation) {\n          return val;\n        }\n        return this.assertLegalChar('' + val || '');\n      }\n\n      dtdEntityValue(val) {\n        if (this.options.noValidation) {\n          return val;\n        }\n        return this.assertLegalChar('' + val || '');\n      }\n\n      dtdNData(val) {\n        if (this.options.noValidation) {\n          return val;\n        }\n        return this.assertLegalChar('' + val || '');\n      }\n\n      assertLegalChar(str) {\n        var regex, res;\n        if (this.options.noValidation) {\n          return str;\n        }\n        regex = '';\n        if (this.options.version === '1.0') {\n          // Valid characters from https://www.w3.org/TR/xml/#charsets\n          // any Unicode character, excluding the surrogate blocks, FFFE, and FFFF.\n          // #x9 | #xA | #xD | [#x20-#xD7FF] | [#xE000-#xFFFD] | [#x10000-#x10FFFF]\n          // This ES5 compatible Regexp has been generated using the \"regenerate\" NPM module:\n          //   let xml_10_InvalidChars = regenerate()\n          //     .addRange(0x0000, 0x0008)\n          //     .add(0x000B, 0x000C)\n          //     .addRange(0x000E, 0x001F)\n          //     .addRange(0xD800, 0xDFFF)\n          //     .addRange(0xFFFE, 0xFFFF)\n          regex = /[\\0-\\x08\\x0B\\f\\x0E-\\x1F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\n          if (res = str.match(regex)) {\n            throw new Error(`Invalid character in string: ${str} at index ${res.index}`);\n          }\n        } else if (this.options.version === '1.1') {\n          // Valid characters from https://www.w3.org/TR/xml11/#charsets\n          // any Unicode character, excluding the surrogate blocks, FFFE, and FFFF.\n          // [#x1-#xD7FF] | [#xE000-#xFFFD] | [#x10000-#x10FFFF]\n          // This ES5 compatible Regexp has been generated using the \"regenerate\" NPM module:\n          //   let xml_11_InvalidChars = regenerate()\n          //     .add(0x0000)\n          //     .addRange(0xD800, 0xDFFF)\n          //     .addRange(0xFFFE, 0xFFFF)\n          regex = /[\\0\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\n          if (res = str.match(regex)) {\n            throw new Error(`Invalid character in string: ${str} at index ${res.index}`);\n          }\n        }\n        return str;\n      }\n\n      assertLegalName(str) {\n        var regex;\n        if (this.options.noValidation) {\n          return str;\n        }\n        this.assertLegalChar(str);\n        regex = /^([:A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])([\\x2D\\.0-:A-Z_a-z\\xB7\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u037D\\u037F-\\u1FFF\\u200C\\u200D\\u203F\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])*$/;\n        if (!str.match(regex)) {\n          throw new Error(\"Invalid character in name\");\n        }\n        return str;\n      }\n\n      // Escapes special characters in text\n\n      // See http://www.w3.org/TR/2000/WD-xml-c14n-20000119.html#charescaping\n\n      // `str` the string to escape\n      textEscape(str) {\n        var ampregex;\n        if (this.options.noValidation) {\n          return str;\n        }\n        ampregex = this.options.noDoubleEncoding ? /(?!&\\S+;)&/g : /&/g;\n        return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\r/g, '&#xD;');\n      }\n\n      // Escapes special characters in attribute values\n\n      // See http://www.w3.org/TR/2000/WD-xml-c14n-20000119.html#charescaping\n\n      // `str` the string to escape\n      attEscape(str) {\n        var ampregex;\n        if (this.options.noValidation) {\n          return str;\n        }\n        ampregex = this.options.noDoubleEncoding ? /(?!&\\S+;)&/g : /&/g;\n        return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/\"/g, '&quot;').replace(/\\t/g, '&#x9;').replace(/\\n/g, '&#xA;').replace(/\\r/g, '&#xD;');\n      }\n\n    };\n\n    // strings to match while converting from JS objects\n    XMLStringifier.prototype.convertAttKey = '@';\n\n    XMLStringifier.prototype.convertPIKey = '?';\n\n    XMLStringifier.prototype.convertTextKey = '#text';\n\n    XMLStringifier.prototype.convertCDataKey = '#cdata';\n\n    XMLStringifier.prototype.convertCommentKey = '#comment';\n\n    XMLStringifier.prototype.convertRawKey = '#raw';\n\n    return XMLStringifier;\n\n  }).call(this);\n\n}).call(this);\n","// Generated by CoffeeScript 2.4.1\n(function() {\n  var NodeType, WriterState, XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLDummy, XMLElement, XMLProcessingInstruction, XMLRaw, XMLText, XMLWriterBase, assign,\n    hasProp = {}.hasOwnProperty;\n\n  ({assign} = require('./Utility'));\n\n  NodeType = require('./NodeType');\n\n  XMLDeclaration = require('./XMLDeclaration');\n\n  XMLDocType = require('./XMLDocType');\n\n  XMLCData = require('./XMLCData');\n\n  XMLComment = require('./XMLComment');\n\n  XMLElement = require('./XMLElement');\n\n  XMLRaw = require('./XMLRaw');\n\n  XMLText = require('./XMLText');\n\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n\n  XMLDummy = require('./XMLDummy');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  WriterState = require('./WriterState');\n\n  // Base class for XML writers\n  module.exports = XMLWriterBase = class XMLWriterBase {\n    // Initializes a new instance of `XMLWriterBase`\n\n    // `options.pretty` pretty prints the result\n    // `options.indent` indentation string\n    // `options.newline` newline sequence\n    // `options.offset` a fixed number of indentations to add to every line\n    // `options.width` maximum column width\n    // `options.allowEmpty` do not self close empty element tags\n    // 'options.dontPrettyTextNodes' if any text is present in node, don't indent or LF\n    // `options.spaceBeforeSlash` add a space before the closing slash of empty elements\n    constructor(options) {\n      var key, ref, value;\n      options || (options = {});\n      this.options = options;\n      ref = options.writer || {};\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this[\"_\" + key] = this[key];\n        this[key] = value;\n      }\n    }\n\n    // Filters writer options and provides defaults\n\n    // `options` writer options\n    filterOptions(options) {\n      var filteredOptions, ref, ref1, ref2, ref3, ref4, ref5, ref6, ref7;\n      options || (options = {});\n      options = assign({}, this.options, options);\n      filteredOptions = {\n        writer: this\n      };\n      filteredOptions.pretty = options.pretty || false;\n      filteredOptions.allowEmpty = options.allowEmpty || false;\n      filteredOptions.indent = (ref = options.indent) != null ? ref : '  ';\n      filteredOptions.newline = (ref1 = options.newline) != null ? ref1 : '\\n';\n      filteredOptions.offset = (ref2 = options.offset) != null ? ref2 : 0;\n      filteredOptions.width = (ref3 = options.width) != null ? ref3 : 0;\n      filteredOptions.dontPrettyTextNodes = (ref4 = (ref5 = options.dontPrettyTextNodes) != null ? ref5 : options.dontprettytextnodes) != null ? ref4 : 0;\n      filteredOptions.spaceBeforeSlash = (ref6 = (ref7 = options.spaceBeforeSlash) != null ? ref7 : options.spacebeforeslash) != null ? ref6 : '';\n      if (filteredOptions.spaceBeforeSlash === true) {\n        filteredOptions.spaceBeforeSlash = ' ';\n      }\n      filteredOptions.suppressPrettyCount = 0;\n      filteredOptions.user = {};\n      filteredOptions.state = WriterState.None;\n      return filteredOptions;\n    }\n\n    // Returns the indentation string for the current level\n\n    // `node` current node\n    // `options` writer options\n    // `level` current indentation level\n    indent(node, options, level) {\n      var indentLevel;\n      if (!options.pretty || options.suppressPrettyCount) {\n        return '';\n      } else if (options.pretty) {\n        indentLevel = (level || 0) + options.offset + 1;\n        if (indentLevel > 0) {\n          return new Array(indentLevel).join(options.indent);\n        }\n      }\n      return '';\n    }\n\n    // Returns the newline string\n\n    // `node` current node\n    // `options` writer options\n    // `level` current indentation level\n    endline(node, options, level) {\n      if (!options.pretty || options.suppressPrettyCount) {\n        return '';\n      } else {\n        return options.newline;\n      }\n    }\n\n    attribute(att, options, level) {\n      var r;\n      this.openAttribute(att, options, level);\n      if (options.pretty && options.width > 0) {\n        r = att.name + '=\"' + att.value + '\"';\n      } else {\n        r = ' ' + att.name + '=\"' + att.value + '\"';\n      }\n      this.closeAttribute(att, options, level);\n      return r;\n    }\n\n    cdata(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<![CDATA[';\n      options.state = WriterState.InsideTag;\n      r += node.value;\n      options.state = WriterState.CloseTag;\n      r += ']]>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    }\n\n    comment(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!-- ';\n      options.state = WriterState.InsideTag;\n      r += node.value;\n      options.state = WriterState.CloseTag;\n      r += ' -->' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    }\n\n    declaration(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<?xml';\n      options.state = WriterState.InsideTag;\n      r += ' version=\"' + node.version + '\"';\n      if (node.encoding != null) {\n        r += ' encoding=\"' + node.encoding + '\"';\n      }\n      if (node.standalone != null) {\n        r += ' standalone=\"' + node.standalone + '\"';\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '?>';\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    }\n\n    docType(node, options, level) {\n      var child, i, len1, r, ref;\n      level || (level = 0);\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level);\n      r += '<!DOCTYPE ' + node.root().name;\n      // external identifier\n      if (node.pubID && node.sysID) {\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n      } else if (node.sysID) {\n        r += ' SYSTEM \"' + node.sysID + '\"';\n      }\n      // internal subset\n      if (node.children.length > 0) {\n        r += ' [';\n        r += this.endline(node, options, level);\n        options.state = WriterState.InsideTag;\n        ref = node.children;\n        for (i = 0, len1 = ref.length; i < len1; i++) {\n          child = ref[i];\n          r += this.writeChildNode(child, options, level + 1);\n        }\n        options.state = WriterState.CloseTag;\n        r += ']';\n      }\n      // close tag\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>';\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    }\n\n    element(node, options, level) {\n      var att, attLen, child, childNodeCount, firstChildNode, i, j, len, len1, len2, name, prettySuppressed, r, ratt, ref, ref1, ref2, ref3, rline;\n      level || (level = 0);\n      prettySuppressed = false;\n      // open tag\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<' + node.name;\n      // attributes\n      if (options.pretty && options.width > 0) {\n        len = r.length;\n        ref = node.attribs;\n        for (name in ref) {\n          if (!hasProp.call(ref, name)) continue;\n          att = ref[name];\n          ratt = this.attribute(att, options, level);\n          attLen = ratt.length;\n          if (len + attLen > options.width) {\n            rline = this.indent(node, options, level + 1) + ratt;\n            r += this.endline(node, options, level) + rline;\n            len = rline.length;\n          } else {\n            rline = ' ' + ratt;\n            r += rline;\n            len += rline.length;\n          }\n        }\n      } else {\n        ref1 = node.attribs;\n        for (name in ref1) {\n          if (!hasProp.call(ref1, name)) continue;\n          att = ref1[name];\n          r += this.attribute(att, options, level);\n        }\n      }\n      childNodeCount = node.children.length;\n      firstChildNode = childNodeCount === 0 ? null : node.children[0];\n      if (childNodeCount === 0 || node.children.every(function(e) {\n        return (e.type === NodeType.Text || e.type === NodeType.Raw) && e.value === '';\n      })) {\n        // empty element\n        if (options.allowEmpty) {\n          r += '>';\n          options.state = WriterState.CloseTag;\n          r += '</' + node.name + '>' + this.endline(node, options, level);\n        } else {\n          options.state = WriterState.CloseTag;\n          r += options.spaceBeforeSlash + '/>' + this.endline(node, options, level);\n        }\n      } else if (options.pretty && childNodeCount === 1 && (firstChildNode.type === NodeType.Text || firstChildNode.type === NodeType.Raw) && (firstChildNode.value != null)) {\n        // do not indent text-only nodes\n        r += '>';\n        options.state = WriterState.InsideTag;\n        options.suppressPrettyCount++;\n        prettySuppressed = true;\n        r += this.writeChildNode(firstChildNode, options, level + 1);\n        options.suppressPrettyCount--;\n        prettySuppressed = false;\n        options.state = WriterState.CloseTag;\n        r += '</' + node.name + '>' + this.endline(node, options, level);\n      } else {\n        // if ANY are a text node, then suppress pretty now\n        if (options.dontPrettyTextNodes) {\n          ref2 = node.children;\n          for (i = 0, len1 = ref2.length; i < len1; i++) {\n            child = ref2[i];\n            if ((child.type === NodeType.Text || child.type === NodeType.Raw) && (child.value != null)) {\n              options.suppressPrettyCount++;\n              prettySuppressed = true;\n              break;\n            }\n          }\n        }\n        // close the opening tag, after dealing with newline\n        r += '>' + this.endline(node, options, level);\n        options.state = WriterState.InsideTag;\n        ref3 = node.children;\n        // inner tags\n        for (j = 0, len2 = ref3.length; j < len2; j++) {\n          child = ref3[j];\n          r += this.writeChildNode(child, options, level + 1);\n        }\n        // close tag\n        options.state = WriterState.CloseTag;\n        r += this.indent(node, options, level) + '</' + node.name + '>';\n        if (prettySuppressed) {\n          options.suppressPrettyCount--;\n        }\n        r += this.endline(node, options, level);\n        options.state = WriterState.None;\n      }\n      this.closeNode(node, options, level);\n      return r;\n    }\n\n    writeChildNode(node, options, level) {\n      switch (node.type) {\n        case NodeType.CData:\n          return this.cdata(node, options, level);\n        case NodeType.Comment:\n          return this.comment(node, options, level);\n        case NodeType.Element:\n          return this.element(node, options, level);\n        case NodeType.Raw:\n          return this.raw(node, options, level);\n        case NodeType.Text:\n          return this.text(node, options, level);\n        case NodeType.ProcessingInstruction:\n          return this.processingInstruction(node, options, level);\n        case NodeType.Dummy:\n          return '';\n        case NodeType.Declaration:\n          return this.declaration(node, options, level);\n        case NodeType.DocType:\n          return this.docType(node, options, level);\n        case NodeType.AttributeDeclaration:\n          return this.dtdAttList(node, options, level);\n        case NodeType.ElementDeclaration:\n          return this.dtdElement(node, options, level);\n        case NodeType.EntityDeclaration:\n          return this.dtdEntity(node, options, level);\n        case NodeType.NotationDeclaration:\n          return this.dtdNotation(node, options, level);\n        default:\n          throw new Error(\"Unknown XML node type: \" + node.constructor.name);\n      }\n    }\n\n    processingInstruction(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<?';\n      options.state = WriterState.InsideTag;\n      r += node.target;\n      if (node.value) {\n        r += ' ' + node.value;\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '?>';\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    }\n\n    raw(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level);\n      options.state = WriterState.InsideTag;\n      r += node.value;\n      options.state = WriterState.CloseTag;\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    }\n\n    text(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level);\n      options.state = WriterState.InsideTag;\n      r += node.value;\n      options.state = WriterState.CloseTag;\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    }\n\n    dtdAttList(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!ATTLIST';\n      options.state = WriterState.InsideTag;\n      r += ' ' + node.elementName + ' ' + node.attributeName + ' ' + node.attributeType;\n      if (node.defaultValueType !== '#DEFAULT') {\n        r += ' ' + node.defaultValueType;\n      }\n      if (node.defaultValue) {\n        r += ' \"' + node.defaultValue + '\"';\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    }\n\n    dtdElement(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!ELEMENT';\n      options.state = WriterState.InsideTag;\n      r += ' ' + node.name + ' ' + node.value;\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    }\n\n    dtdEntity(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!ENTITY';\n      options.state = WriterState.InsideTag;\n      if (node.pe) {\n        r += ' %';\n      }\n      r += ' ' + node.name;\n      if (node.value) {\n        r += ' \"' + node.value + '\"';\n      } else {\n        if (node.pubID && node.sysID) {\n          r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n        } else if (node.sysID) {\n          r += ' SYSTEM \"' + node.sysID + '\"';\n        }\n        if (node.nData) {\n          r += ' NDATA ' + node.nData;\n        }\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    }\n\n    dtdNotation(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!NOTATION';\n      options.state = WriterState.InsideTag;\n      r += ' ' + node.name;\n      if (node.pubID && node.sysID) {\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n      } else if (node.pubID) {\n        r += ' PUBLIC \"' + node.pubID + '\"';\n      } else if (node.sysID) {\n        r += ' SYSTEM \"' + node.sysID + '\"';\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    }\n\n    openNode(node, options, level) {}\n\n    closeNode(node, options, level) {}\n\n    openAttribute(att, options, level) {}\n\n    closeAttribute(att, options, level) {}\n\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 2.4.1\n(function() {\n  var NodeType, WriterState, XMLDOMImplementation, XMLDocument, XMLDocumentCB, XMLStreamWriter, XMLStringWriter, assign, isFunction;\n\n  ({assign, isFunction} = require('./Utility'));\n\n  XMLDOMImplementation = require('./XMLDOMImplementation');\n\n  XMLDocument = require('./XMLDocument');\n\n  XMLDocumentCB = require('./XMLDocumentCB');\n\n  XMLStringWriter = require('./XMLStringWriter');\n\n  XMLStreamWriter = require('./XMLStreamWriter');\n\n  NodeType = require('./NodeType');\n\n  WriterState = require('./WriterState');\n\n  // Creates a new document and returns the root node for\n  // chain-building the document tree\n\n  // `name` name of the root element\n\n  // `xmldec.version` A version number string, e.g. 1.0\n  // `xmldec.encoding` Encoding declaration, e.g. UTF-8\n  // `xmldec.standalone` standalone document declaration: true or false\n\n  // `doctype.pubID` public identifier of the external subset\n  // `doctype.sysID` system identifier of the external subset\n\n  // `options.headless` whether XML declaration and doctype will be included:\n  //     true or false\n  // `options.keepNullNodes` whether nodes with null values will be kept\n  //     or ignored: true or false\n  // `options.keepNullAttributes` whether attributes with null values will be\n  //     kept or ignored: true or false\n  // `options.ignoreDecorators` whether decorator strings will be ignored when\n  //     converting JS objects: true or false\n  // `options.separateArrayItems` whether array items are created as separate\n  //     nodes when passed as an object value: true or false\n  // `options.noDoubleEncoding` whether existing html entities are encoded:\n  //     true or false\n  // `options.stringify` a set of functions to use for converting values to\n  //     strings\n  // `options.writer` the default XML writer to use for converting nodes to\n  //     string. If the default writer is not set, the built-in XMLStringWriter\n  //     will be used instead.\n  module.exports.create = function(name, xmldec, doctype, options) {\n    var doc, root;\n    if (name == null) {\n      throw new Error(\"Root element needs a name.\");\n    }\n    options = assign({}, xmldec, doctype, options);\n    // create the document node\n    doc = new XMLDocument(options);\n    // add the root node\n    root = doc.element(name);\n    // prolog\n    if (!options.headless) {\n      doc.declaration(options);\n      if ((options.pubID != null) || (options.sysID != null)) {\n        doc.dtd(options);\n      }\n    }\n    return root;\n  };\n\n  // Creates a new document and returns the document node for\n  // chain-building the document tree\n\n  // `options.keepNullNodes` whether nodes with null values will be kept\n  //     or ignored: true or false\n  // `options.keepNullAttributes` whether attributes with null values will be\n  //     kept or ignored: true or false\n  // `options.ignoreDecorators` whether decorator strings will be ignored when\n  //     converting JS objects: true or false\n  // `options.separateArrayItems` whether array items are created as separate\n  //     nodes when passed as an object value: true or false\n  // `options.noDoubleEncoding` whether existing html entities are encoded:\n  //     true or false\n  // `options.stringify` a set of functions to use for converting values to\n  //     strings\n  // `options.writer` the default XML writer to use for converting nodes to\n  //     string. If the default writer is not set, the built-in XMLStringWriter\n  //     will be used instead.\n\n  // `onData` the function to be called when a new chunk of XML is output. The\n  //          string containing the XML chunk is passed to `onData` as its single\n  //          argument.\n  // `onEnd`  the function to be called when the XML document is completed with\n  //          `end`. `onEnd` does not receive any arguments.\n  module.exports.begin = function(options, onData, onEnd) {\n    if (isFunction(options)) {\n      [onData, onEnd] = [options, onData];\n      options = {};\n    }\n    if (onData) {\n      return new XMLDocumentCB(options, onData, onEnd);\n    } else {\n      return new XMLDocument(options);\n    }\n  };\n\n  module.exports.stringWriter = function(options) {\n    return new XMLStringWriter(options);\n  };\n\n  module.exports.streamWriter = function(stream, options) {\n    return new XMLStreamWriter(stream, options);\n  };\n\n  module.exports.implementation = new XMLDOMImplementation();\n\n  module.exports.nodeType = NodeType;\n\n  module.exports.writerState = WriterState;\n\n}).call(this);\n","module.exports = \"<div class=\\\"m-control m-wmc-container\\\">\\n  <!-- TITLE -->\\n  <div class=\\\"title\\\">Gestión de la sesión</div>\\n\\n  <input id=\\\"tab-wcm-1\\\" class=\\\"tabs\\\" data-tab=\\\"loadWMC\\\" type=\\\"radio\\\" name=\\\"tabs-wmc\\\" checked>\\n  <label for=\\\"tab-wcm-1\\\">Cargar Sesión</label>\\n\\n  <input id=\\\"tab-wcm-2\\\" class=\\\"tabs\\\" data-tab=\\\"saveWMC\\\" type=\\\"radio\\\" name=\\\"tabs-wmc\\\">\\n  <label for=\\\"tab-wcm-2\\\">Guardar Sesión</label>\\n  <div class=\\\"tabs-border\\\"></div>\\n\\n  <!-- FORM -->\\n  <div id=\\\"content-wmc-1\\\" class=\\\"content-tab\\\">\\n    <div class=\\\"form\\\">\\n      <div class=\\\"info\\\">\\n        Carga un WMC v1.1.0 como fichero o desde una url\\n      </div>\\n      <div class=\\\"load-name\\\">\\n        <label>Nombre de la sesión</label>\\n        <input type=\\\"text\\\" value=\\\"Sesión\\\">\\n      </div>\\n      <!-- file -->\\n      <div class=\\\"file\\\">\\n        <label>Fichero WMC</label>\\n        <input type=\\\"file\\\" accept=\\\".xml\\\">\\n      </div>\\n      <div class=\\\"url\\\">\\n        <label>Url WMC</label>\\n        <input type=\\\"text\\\">\\n      </div>\\n    </div>\\n    <!-- buttons -->\\n    <div class=\\\"button\\\">\\n      <button class=\\\"load\\\" title=\\\"Cargar WMC\\\" {{#unless layerName}} disabled{{/unless}}> <i class=\\\"g-cartografia-subir\\\"></i>\\n        Cargar Sesión</button>\\n    </div>\\n  </div>\\n\\n  <div id=\\\"content-wmc-2\\\" class=\\\"content-tab\\\">\\n    <div class=\\\"form\\\">\\n      <div class=\\\"info\\\">\\n        Guarda un WMC v1.1.0 como fichero\\n      </div>\\n      <!-- Nombre fichero -->\\n      <div class=\\\"save-name\\\">\\n        <label>Título del fichero de descarga</label>\\n        <input type=\\\"text\\\" value=\\\"Sesión\\\">\\n      </div>\\n    </div>\\n    <!-- buttons -->\\n    <div class=\\\"button\\\">\\n      <button class=\\\"save\\\" title=\\\"Guardar WMC\\\" {{#unless layerName}} disabled{{/unless}}> <i class=\\\"g-cartografia-guardar\\\"></i>\\n        Guardar Sesión</button>\\n    </div>\\n  </div>\\n\\n</div>\";","// Generated by CoffeeScript 2.4.1\n(function() {\n  var XMLDOMConfiguration, XMLDOMErrorHandler, XMLDOMStringList;\n\n  XMLDOMErrorHandler = require('./XMLDOMErrorHandler');\n\n  XMLDOMStringList = require('./XMLDOMStringList');\n\n  // Implements the DOMConfiguration interface\n  module.exports = XMLDOMConfiguration = (function() {\n    class XMLDOMConfiguration {\n      constructor() {\n        var clonedSelf;\n        this.defaultParams = {\n          \"canonical-form\": false,\n          \"cdata-sections\": false,\n          \"comments\": false,\n          \"datatype-normalization\": false,\n          \"element-content-whitespace\": true,\n          \"entities\": true,\n          \"error-handler\": new XMLDOMErrorHandler(),\n          \"infoset\": true,\n          \"validate-if-schema\": false,\n          \"namespaces\": true,\n          \"namespace-declarations\": true,\n          \"normalize-characters\": false,\n          \"schema-location\": '',\n          \"schema-type\": '',\n          \"split-cdata-sections\": true,\n          \"validate\": false,\n          \"well-formed\": true\n        };\n        this.params = clonedSelf = Object.create(this.defaultParams);\n      }\n\n      // Gets the value of a parameter.\n\n      // `name` name of the parameter\n      getParameter(name) {\n        if (this.params.hasOwnProperty(name)) {\n          return this.params[name];\n        } else {\n          return null;\n        }\n      }\n\n      // Checks if setting a parameter to a specific value is supported.\n\n      // `name` name of the parameter\n      // `value` parameter value\n      canSetParameter(name, value) {\n        return true;\n      }\n\n      // Sets the value of a parameter.\n\n      // `name` name of the parameter\n      // `value` new value or null if the user wishes to unset the parameter\n      setParameter(name, value) {\n        if (value != null) {\n          return this.params[name] = value;\n        } else {\n          return delete this.params[name];\n        }\n      }\n\n    };\n\n    // Returns the list of parameter names\n    Object.defineProperty(XMLDOMConfiguration.prototype, 'parameterNames', {\n      get: function() {\n        return new XMLDOMStringList(Object.keys(this.defaultParams));\n      }\n    });\n\n    return XMLDOMConfiguration;\n\n  }).call(this);\n\n}).call(this);\n","// Generated by CoffeeScript 2.4.1\n(function() {\n  // Represents the error handler for DOM operations\n  var XMLDOMErrorHandler;\n\n  module.exports = XMLDOMErrorHandler = class XMLDOMErrorHandler {\n    // Initializes a new instance of `XMLDOMErrorHandler`\n\n    constructor() {}\n\n    // Called on the error handler when an error occurs.\n\n    // `error` the error message as a string\n    handleError(error) {\n      throw new Error(error);\n    }\n\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 2.4.1\n(function() {\n  // Represents a list of string entries\n  var XMLDOMStringList;\n\n  module.exports = XMLDOMStringList = (function() {\n    class XMLDOMStringList {\n      // Initializes a new instance of `XMLDOMStringList`\n      // This is just a wrapper around an ordinary\n      // JS array.\n\n      // `arr` the array of string values\n      constructor(arr) {\n        this.arr = arr || [];\n      }\n\n      // Returns the indexth item in the collection.\n\n      // `index` index into the collection\n      item(index) {\n        return this.arr[index] || null;\n      }\n\n      // Test if a string is part of this DOMStringList.\n\n      // `str` the string to look for\n      contains(str) {\n        return this.arr.indexOf(str) !== -1;\n      }\n\n    };\n\n    // Returns the number of strings in the list.\n    Object.defineProperty(XMLDOMStringList.prototype, 'length', {\n      get: function() {\n        return this.arr.length;\n      }\n    });\n\n    return XMLDOMStringList;\n\n  }).call(this);\n\n}).call(this);\n","// Generated by CoffeeScript 2.4.1\n(function() {\n  // Represents a list of nodes\n  var XMLNodeList;\n\n  module.exports = XMLNodeList = (function() {\n    class XMLNodeList {\n      // Initializes a new instance of `XMLNodeList`\n      // This is just a wrapper around an ordinary\n      // JS array.\n\n      // `nodes` the array containing nodes.\n      constructor(nodes) {\n        this.nodes = nodes;\n      }\n\n      // Creates and returns a deep clone of `this`\n\n      clone() {\n        // this class should not be cloned since it wraps\n        // around a given array. The calling function should check\n        // whether the wrapped array is null and supply a new array\n        // (from the clone).\n        return this.nodes = null;\n      }\n\n      // DOM Level 1\n      item(index) {\n        return this.nodes[index] || null;\n      }\n\n    };\n\n    // DOM level 1\n    Object.defineProperty(XMLNodeList.prototype, 'length', {\n      get: function() {\n        return this.nodes.length || 0;\n      }\n    });\n\n    return XMLNodeList;\n\n  }).call(this);\n\n}).call(this);\n","// Generated by CoffeeScript 2.4.1\n(function() {\n  module.exports = {\n    Disconnected: 1,\n    Preceding: 2,\n    Following: 4,\n    Contains: 8,\n    ContainedBy: 16,\n    ImplementationSpecific: 32\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 2.4.1\n(function() {\n  var NodeType, WriterState, XMLAttribute, XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLDocument, XMLDocumentCB, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStringWriter, XMLStringifier, XMLText, getValue, isFunction, isObject, isPlainObject,\n    hasProp = {}.hasOwnProperty;\n\n  ({isObject, isFunction, isPlainObject, getValue} = require('./Utility'));\n\n  NodeType = require('./NodeType');\n\n  XMLDocument = require('./XMLDocument');\n\n  XMLElement = require('./XMLElement');\n\n  XMLCData = require('./XMLCData');\n\n  XMLComment = require('./XMLComment');\n\n  XMLRaw = require('./XMLRaw');\n\n  XMLText = require('./XMLText');\n\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n\n  XMLDeclaration = require('./XMLDeclaration');\n\n  XMLDocType = require('./XMLDocType');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  XMLAttribute = require('./XMLAttribute');\n\n  XMLStringifier = require('./XMLStringifier');\n\n  XMLStringWriter = require('./XMLStringWriter');\n\n  WriterState = require('./WriterState');\n\n  // Represents an XML builder\n  module.exports = XMLDocumentCB = class XMLDocumentCB {\n    // Initializes a new instance of `XMLDocumentCB`\n\n    // `options.keepNullNodes` whether nodes with null values will be kept\n    //     or ignored: true or false\n    // `options.keepNullAttributes` whether attributes with null values will be\n    //     kept or ignored: true or false\n    // `options.ignoreDecorators` whether decorator strings will be ignored when\n    //     converting JS objects: true or false\n    // `options.separateArrayItems` whether array items are created as separate\n    //     nodes when passed as an object value: true or false\n    // `options.noDoubleEncoding` whether existing html entities are encoded:\n    //     true or false\n    // `options.stringify` a set of functions to use for converting values to\n    //     strings\n    // `options.writer` the default XML writer to use for converting nodes to\n    //     string. If the default writer is not set, the built-in XMLStringWriter\n    //     will be used instead.\n\n    // `onData` the function to be called when a new chunk of XML is output. The\n    //          string containing the XML chunk is passed to `onData` as its first\n    //          argument, and the current indentation level as its second argument.\n    // `onEnd`  the function to be called when the XML document is completed with\n    //          `end`. `onEnd` does not receive any arguments.\n    constructor(options, onData, onEnd) {\n      var writerOptions;\n      this.name = \"?xml\";\n      this.type = NodeType.Document;\n      options || (options = {});\n      writerOptions = {};\n      if (!options.writer) {\n        options.writer = new XMLStringWriter();\n      } else if (isPlainObject(options.writer)) {\n        writerOptions = options.writer;\n        options.writer = new XMLStringWriter();\n      }\n      this.options = options;\n      this.writer = options.writer;\n      this.writerOptions = this.writer.filterOptions(writerOptions);\n      this.stringify = new XMLStringifier(options);\n      this.onDataCallback = onData || function() {};\n      this.onEndCallback = onEnd || function() {};\n      this.currentNode = null;\n      this.currentLevel = -1;\n      this.openTags = {};\n      this.documentStarted = false;\n      this.documentCompleted = false;\n      this.root = null;\n    }\n\n    // Creates a child element node from the given XMLNode\n\n    // `node` the child node\n    createChildNode(node) {\n      var att, attName, attributes, child, i, len, ref, ref1;\n      switch (node.type) {\n        case NodeType.CData:\n          this.cdata(node.value);\n          break;\n        case NodeType.Comment:\n          this.comment(node.value);\n          break;\n        case NodeType.Element:\n          attributes = {};\n          ref = node.attribs;\n          for (attName in ref) {\n            if (!hasProp.call(ref, attName)) continue;\n            att = ref[attName];\n            attributes[attName] = att.value;\n          }\n          this.node(node.name, attributes);\n          break;\n        case NodeType.Dummy:\n          this.dummy();\n          break;\n        case NodeType.Raw:\n          this.raw(node.value);\n          break;\n        case NodeType.Text:\n          this.text(node.value);\n          break;\n        case NodeType.ProcessingInstruction:\n          this.instruction(node.target, node.value);\n          break;\n        default:\n          throw new Error(\"This XML node type is not supported in a JS object: \" + node.constructor.name);\n      }\n      ref1 = node.children;\n      // write child nodes recursively\n      for (i = 0, len = ref1.length; i < len; i++) {\n        child = ref1[i];\n        this.createChildNode(child);\n        if (child.type === NodeType.Element) {\n          this.up();\n        }\n      }\n      return this;\n    }\n\n    // Creates a dummy node\n\n    dummy() {\n      // no-op, just return this\n      return this;\n    }\n\n    // Creates a node\n\n    // `name` name of the node\n    // `attributes` an object containing name/value pairs of attributes\n    // `text` element text\n    node(name, attributes, text) {\n      if (name == null) {\n        throw new Error(\"Missing node name.\");\n      }\n      if (this.root && this.currentLevel === -1) {\n        throw new Error(\"Document can only have one root node. \" + this.debugInfo(name));\n      }\n      this.openCurrent();\n      name = getValue(name);\n      if (attributes == null) {\n        attributes = {};\n      }\n      attributes = getValue(attributes);\n      // swap argument order: text <-> attributes\n      if (!isObject(attributes)) {\n        [text, attributes] = [attributes, text];\n      }\n      this.currentNode = new XMLElement(this, name, attributes);\n      this.currentNode.children = false;\n      this.currentLevel++;\n      this.openTags[this.currentLevel] = this.currentNode;\n      if (text != null) {\n        this.text(text);\n      }\n      return this;\n    }\n\n    // Creates a child element node or an element type declaration when called\n    // inside the DTD\n\n    // `name` name of the node\n    // `attributes` an object containing name/value pairs of attributes\n    // `text` element text\n    element(name, attributes, text) {\n      var child, i, len, oldValidationFlag, ref, root;\n      if (this.currentNode && this.currentNode.type === NodeType.DocType) {\n        this.dtdElement(...arguments);\n      } else {\n        if (Array.isArray(name) || isObject(name) || isFunction(name)) {\n          oldValidationFlag = this.options.noValidation;\n          this.options.noValidation = true;\n          root = new XMLDocument(this.options).element('TEMP_ROOT');\n          root.element(name);\n          this.options.noValidation = oldValidationFlag;\n          ref = root.children;\n          for (i = 0, len = ref.length; i < len; i++) {\n            child = ref[i];\n            this.createChildNode(child);\n            if (child.type === NodeType.Element) {\n              this.up();\n            }\n          }\n        } else {\n          this.node(name, attributes, text);\n        }\n      }\n      return this;\n    }\n\n    // Adds or modifies an attribute\n\n    // `name` attribute name\n    // `value` attribute value\n    attribute(name, value) {\n      var attName, attValue;\n      if (!this.currentNode || this.currentNode.children) {\n        throw new Error(\"att() can only be used immediately after an ele() call in callback mode. \" + this.debugInfo(name));\n      }\n      if (name != null) {\n        name = getValue(name);\n      }\n      if (isObject(name)) { // expand if object\n        for (attName in name) {\n          if (!hasProp.call(name, attName)) continue;\n          attValue = name[attName];\n          this.attribute(attName, attValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        if (this.options.keepNullAttributes && (value == null)) {\n          this.currentNode.attribs[name] = new XMLAttribute(this, name, \"\");\n        } else if (value != null) {\n          this.currentNode.attribs[name] = new XMLAttribute(this, name, value);\n        }\n      }\n      return this;\n    }\n\n    // Creates a text node\n\n    // `value` element text\n    text(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLText(this, value);\n      this.onData(this.writer.text(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    }\n\n    // Creates a CDATA node\n\n    // `value` element text without CDATA delimiters\n    cdata(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLCData(this, value);\n      this.onData(this.writer.cdata(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    }\n\n    // Creates a comment node\n\n    // `value` comment text\n    comment(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLComment(this, value);\n      this.onData(this.writer.comment(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    }\n\n    // Adds unescaped raw text\n\n    // `value` text\n    raw(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLRaw(this, value);\n      this.onData(this.writer.raw(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    }\n\n    // Adds a processing instruction\n\n    // `target` instruction target\n    // `value` instruction value\n    instruction(target, value) {\n      var i, insTarget, insValue, len, node;\n      this.openCurrent();\n      if (target != null) {\n        target = getValue(target);\n      }\n      if (value != null) {\n        value = getValue(value);\n      }\n      if (Array.isArray(target)) { // expand if array\n        for (i = 0, len = target.length; i < len; i++) {\n          insTarget = target[i];\n          this.instruction(insTarget);\n        }\n      } else if (isObject(target)) { // expand if object\n        for (insTarget in target) {\n          if (!hasProp.call(target, insTarget)) continue;\n          insValue = target[insTarget];\n          this.instruction(insTarget, insValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        node = new XMLProcessingInstruction(this, target, value);\n        this.onData(this.writer.processingInstruction(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      }\n      return this;\n    }\n\n    // Creates the xml declaration\n\n    // `version` A version number string, e.g. 1.0\n    // `encoding` Encoding declaration, e.g. UTF-8\n    // `standalone` standalone document declaration: true or false\n    declaration(version, encoding, standalone) {\n      var node;\n      this.openCurrent();\n      if (this.documentStarted) {\n        throw new Error(\"declaration() must be the first node.\");\n      }\n      node = new XMLDeclaration(this, version, encoding, standalone);\n      this.onData(this.writer.declaration(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    }\n\n    // Creates the document type declaration\n\n    // `root`  the name of the root node\n    // `pubID` the public identifier of the external subset\n    // `sysID` the system identifier of the external subset\n    doctype(root, pubID, sysID) {\n      this.openCurrent();\n      if (root == null) {\n        throw new Error(\"Missing root node name.\");\n      }\n      if (this.root) {\n        throw new Error(\"dtd() must come before the root node.\");\n      }\n      this.currentNode = new XMLDocType(this, pubID, sysID);\n      this.currentNode.rootNodeName = root;\n      this.currentNode.children = false;\n      this.currentLevel++;\n      this.openTags[this.currentLevel] = this.currentNode;\n      return this;\n    }\n\n    // Creates an element type declaration\n\n    // `name` element name\n    // `value` element content (defaults to #PCDATA)\n    dtdElement(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDElement(this, name, value);\n      this.onData(this.writer.dtdElement(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    }\n\n    // Creates an attribute declaration\n\n    // `elementName` the name of the element containing this attribute\n    // `attributeName` attribute name\n    // `attributeType` type of the attribute (defaults to CDATA)\n    // `defaultValueType` default value type (either #REQUIRED, #IMPLIED, #FIXED or\n    //                    #DEFAULT) (defaults to #IMPLIED)\n    // `defaultValue` default value of the attribute\n    //                (only used for #FIXED or #DEFAULT)\n    attList(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);\n      this.onData(this.writer.dtdAttList(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    }\n\n    // Creates a general entity declaration\n\n    // `name` the name of the entity\n    // `value` internal entity value or an object with external entity details\n    // `value.pubID` public identifier\n    // `value.sysID` system identifier\n    // `value.nData` notation declaration\n    entity(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDEntity(this, false, name, value);\n      this.onData(this.writer.dtdEntity(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    }\n\n    // Creates a parameter entity declaration\n\n    // `name` the name of the entity\n    // `value` internal entity value or an object with external entity details\n    // `value.pubID` public identifier\n    // `value.sysID` system identifier\n    pEntity(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDEntity(this, true, name, value);\n      this.onData(this.writer.dtdEntity(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    }\n\n    // Creates a NOTATION declaration\n\n    // `name` the name of the notation\n    // `value` an object with external entity details\n    // `value.pubID` public identifier\n    // `value.sysID` system identifier\n    notation(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDNotation(this, name, value);\n      this.onData(this.writer.dtdNotation(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    }\n\n    // Gets the parent node\n    up() {\n      if (this.currentLevel < 0) {\n        throw new Error(\"The document node has no parent.\");\n      }\n      if (this.currentNode) {\n        if (this.currentNode.children) {\n          this.closeNode(this.currentNode);\n        } else {\n          this.openNode(this.currentNode);\n        }\n        this.currentNode = null;\n      } else {\n        this.closeNode(this.openTags[this.currentLevel]);\n      }\n      delete this.openTags[this.currentLevel];\n      this.currentLevel--;\n      return this;\n    }\n\n    // Ends the document\n    end() {\n      while (this.currentLevel >= 0) {\n        this.up();\n      }\n      return this.onEnd();\n    }\n\n    // Opens the current parent node\n    openCurrent() {\n      if (this.currentNode) {\n        this.currentNode.children = true;\n        return this.openNode(this.currentNode);\n      }\n    }\n\n    // Writes the opening tag of the current node or the entire node if it has\n    // no child nodes\n    openNode(node) {\n      var att, chunk, name, ref;\n      if (!node.isOpen) {\n        if (!this.root && this.currentLevel === 0 && node.type === NodeType.Element) {\n          this.root = node;\n        }\n        chunk = '';\n        if (node.type === NodeType.Element) {\n          this.writerOptions.state = WriterState.OpenTag;\n          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + '<' + node.name;\n          ref = node.attribs;\n          for (name in ref) {\n            if (!hasProp.call(ref, name)) continue;\n            att = ref[name];\n            chunk += this.writer.attribute(att, this.writerOptions, this.currentLevel);\n          }\n          chunk += (node.children ? '>' : '/>') + this.writer.endline(node, this.writerOptions, this.currentLevel);\n          this.writerOptions.state = WriterState.InsideTag; // if node.type is NodeType.DocType\n        } else {\n          this.writerOptions.state = WriterState.OpenTag;\n          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + '<!DOCTYPE ' + node.rootNodeName;\n          \n          // external identifier\n          if (node.pubID && node.sysID) {\n            chunk += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n          } else if (node.sysID) {\n            chunk += ' SYSTEM \"' + node.sysID + '\"';\n          }\n          \n          // internal subset\n          if (node.children) {\n            chunk += ' [';\n            this.writerOptions.state = WriterState.InsideTag;\n          } else {\n            this.writerOptions.state = WriterState.CloseTag;\n            chunk += '>';\n          }\n          chunk += this.writer.endline(node, this.writerOptions, this.currentLevel);\n        }\n        this.onData(chunk, this.currentLevel);\n        return node.isOpen = true;\n      }\n    }\n\n    // Writes the closing tag of the current node\n    closeNode(node) {\n      var chunk;\n      if (!node.isClosed) {\n        chunk = '';\n        this.writerOptions.state = WriterState.CloseTag;\n        if (node.type === NodeType.Element) {\n          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + '</' + node.name + '>' + this.writer.endline(node, this.writerOptions, this.currentLevel); // if node.type is NodeType.DocType\n        } else {\n          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + ']>' + this.writer.endline(node, this.writerOptions, this.currentLevel);\n        }\n        this.writerOptions.state = WriterState.None;\n        this.onData(chunk, this.currentLevel);\n        return node.isClosed = true;\n      }\n    }\n\n    // Called when a new chunk of XML is output\n\n    // `chunk` a string containing the XML chunk\n    // `level` current indentation level\n    onData(chunk, level) {\n      this.documentStarted = true;\n      return this.onDataCallback(chunk, level + 1);\n    }\n\n    // Called when the XML document is completed\n    onEnd() {\n      this.documentCompleted = true;\n      return this.onEndCallback();\n    }\n\n    // Returns debug string\n    debugInfo(name) {\n      if (name == null) {\n        return \"\";\n      } else {\n        return \"node: <\" + name + \">\";\n      }\n    }\n\n    // Node aliases\n    ele() {\n      return this.element(...arguments);\n    }\n\n    nod(name, attributes, text) {\n      return this.node(name, attributes, text);\n    }\n\n    txt(value) {\n      return this.text(value);\n    }\n\n    dat(value) {\n      return this.cdata(value);\n    }\n\n    com(value) {\n      return this.comment(value);\n    }\n\n    ins(target, value) {\n      return this.instruction(target, value);\n    }\n\n    dec(version, encoding, standalone) {\n      return this.declaration(version, encoding, standalone);\n    }\n\n    dtd(root, pubID, sysID) {\n      return this.doctype(root, pubID, sysID);\n    }\n\n    e(name, attributes, text) {\n      return this.element(name, attributes, text);\n    }\n\n    n(name, attributes, text) {\n      return this.node(name, attributes, text);\n    }\n\n    t(value) {\n      return this.text(value);\n    }\n\n    d(value) {\n      return this.cdata(value);\n    }\n\n    c(value) {\n      return this.comment(value);\n    }\n\n    r(value) {\n      return this.raw(value);\n    }\n\n    i(target, value) {\n      return this.instruction(target, value);\n    }\n\n    // Attribute aliases\n    att() {\n      if (this.currentNode && this.currentNode.type === NodeType.DocType) {\n        return this.attList(...arguments);\n      } else {\n        return this.attribute(...arguments);\n      }\n    }\n\n    a() {\n      if (this.currentNode && this.currentNode.type === NodeType.DocType) {\n        return this.attList(...arguments);\n      } else {\n        return this.attribute(...arguments);\n      }\n    }\n\n    // DTD aliases\n    // att() and ele() are defined above\n    ent(name, value) {\n      return this.entity(name, value);\n    }\n\n    pent(name, value) {\n      return this.pEntity(name, value);\n    }\n\n    not(name, value) {\n      return this.notation(name, value);\n    }\n\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 2.4.1\n(function() {\n  var NodeType, WriterState, XMLStreamWriter, XMLWriterBase,\n    hasProp = {}.hasOwnProperty;\n\n  NodeType = require('./NodeType');\n\n  XMLWriterBase = require('./XMLWriterBase');\n\n  WriterState = require('./WriterState');\n\n  // Prints XML nodes to a stream\n  module.exports = XMLStreamWriter = class XMLStreamWriter extends XMLWriterBase {\n    // Initializes a new instance of `XMLStreamWriter`\n\n    // `stream` output stream\n    // `options.pretty` pretty prints the result\n    // `options.indent` indentation string\n    // `options.newline` newline sequence\n    // `options.offset` a fixed number of indentations to add to every line\n    // `options.allowEmpty` do not self close empty element tags\n    // 'options.dontPrettyTextNodes' if any text is present in node, don't indent or LF\n    // `options.spaceBeforeSlash` add a space before the closing slash of empty elements\n    constructor(stream, options) {\n      super(options);\n      this.stream = stream;\n    }\n\n    endline(node, options, level) {\n      if (node.isLastRootNode && options.state === WriterState.CloseTag) {\n        return '';\n      } else {\n        return super.endline(node, options, level);\n      }\n    }\n\n    document(doc, options) {\n      var child, i, j, k, len1, len2, ref, ref1, results;\n      ref = doc.children;\n      // set a flag so that we don't insert a newline after the last root level node \n      for (i = j = 0, len1 = ref.length; j < len1; i = ++j) {\n        child = ref[i];\n        child.isLastRootNode = i === doc.children.length - 1;\n      }\n      options = this.filterOptions(options);\n      ref1 = doc.children;\n      results = [];\n      for (k = 0, len2 = ref1.length; k < len2; k++) {\n        child = ref1[k];\n        results.push(this.writeChildNode(child, options, 0));\n      }\n      return results;\n    }\n\n    cdata(node, options, level) {\n      return this.stream.write(super.cdata(node, options, level));\n    }\n\n    comment(node, options, level) {\n      return this.stream.write(super.comment(node, options, level));\n    }\n\n    declaration(node, options, level) {\n      return this.stream.write(super.declaration(node, options, level));\n    }\n\n    docType(node, options, level) {\n      var child, j, len1, ref;\n      level || (level = 0);\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      this.stream.write(this.indent(node, options, level));\n      this.stream.write('<!DOCTYPE ' + node.root().name);\n      // external identifier\n      if (node.pubID && node.sysID) {\n        this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n      } else if (node.sysID) {\n        this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n      }\n      // internal subset\n      if (node.children.length > 0) {\n        this.stream.write(' [');\n        this.stream.write(this.endline(node, options, level));\n        options.state = WriterState.InsideTag;\n        ref = node.children;\n        for (j = 0, len1 = ref.length; j < len1; j++) {\n          child = ref[j];\n          this.writeChildNode(child, options, level + 1);\n        }\n        options.state = WriterState.CloseTag;\n        this.stream.write(']');\n      }\n      // close tag\n      options.state = WriterState.CloseTag;\n      this.stream.write(options.spaceBeforeSlash + '>');\n      this.stream.write(this.endline(node, options, level));\n      options.state = WriterState.None;\n      return this.closeNode(node, options, level);\n    }\n\n    element(node, options, level) {\n      var att, attLen, child, childNodeCount, firstChildNode, j, len, len1, name, prettySuppressed, r, ratt, ref, ref1, ref2, rline;\n      level || (level = 0);\n      // open tag\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<' + node.name;\n      // attributes\n      if (options.pretty && options.width > 0) {\n        len = r.length;\n        ref = node.attribs;\n        for (name in ref) {\n          if (!hasProp.call(ref, name)) continue;\n          att = ref[name];\n          ratt = this.attribute(att, options, level);\n          attLen = ratt.length;\n          if (len + attLen > options.width) {\n            rline = this.indent(node, options, level + 1) + ratt;\n            r += this.endline(node, options, level) + rline;\n            len = rline.length;\n          } else {\n            rline = ' ' + ratt;\n            r += rline;\n            len += rline.length;\n          }\n        }\n      } else {\n        ref1 = node.attribs;\n        for (name in ref1) {\n          if (!hasProp.call(ref1, name)) continue;\n          att = ref1[name];\n          r += this.attribute(att, options, level);\n        }\n      }\n      this.stream.write(r);\n      childNodeCount = node.children.length;\n      firstChildNode = childNodeCount === 0 ? null : node.children[0];\n      if (childNodeCount === 0 || node.children.every(function(e) {\n        return (e.type === NodeType.Text || e.type === NodeType.Raw) && e.value === '';\n      })) {\n        // empty element\n        if (options.allowEmpty) {\n          this.stream.write('>');\n          options.state = WriterState.CloseTag;\n          this.stream.write('</' + node.name + '>');\n        } else {\n          options.state = WriterState.CloseTag;\n          this.stream.write(options.spaceBeforeSlash + '/>');\n        }\n      } else if (options.pretty && childNodeCount === 1 && (firstChildNode.type === NodeType.Text || firstChildNode.type === NodeType.Raw) && (firstChildNode.value != null)) {\n        // do not indent text-only nodes\n        this.stream.write('>');\n        options.state = WriterState.InsideTag;\n        options.suppressPrettyCount++;\n        prettySuppressed = true;\n        this.writeChildNode(firstChildNode, options, level + 1);\n        options.suppressPrettyCount--;\n        prettySuppressed = false;\n        options.state = WriterState.CloseTag;\n        this.stream.write('</' + node.name + '>');\n      } else {\n        this.stream.write('>' + this.endline(node, options, level));\n        options.state = WriterState.InsideTag;\n        ref2 = node.children;\n        // inner tags\n        for (j = 0, len1 = ref2.length; j < len1; j++) {\n          child = ref2[j];\n          this.writeChildNode(child, options, level + 1);\n        }\n        // close tag\n        options.state = WriterState.CloseTag;\n        this.stream.write(this.indent(node, options, level) + '</' + node.name + '>');\n      }\n      this.stream.write(this.endline(node, options, level));\n      options.state = WriterState.None;\n      return this.closeNode(node, options, level);\n    }\n\n    processingInstruction(node, options, level) {\n      return this.stream.write(super.processingInstruction(node, options, level));\n    }\n\n    raw(node, options, level) {\n      return this.stream.write(super.raw(node, options, level));\n    }\n\n    text(node, options, level) {\n      return this.stream.write(super.text(node, options, level));\n    }\n\n    dtdAttList(node, options, level) {\n      return this.stream.write(super.dtdAttList(node, options, level));\n    }\n\n    dtdElement(node, options, level) {\n      return this.stream.write(super.dtdElement(node, options, level));\n    }\n\n    dtdEntity(node, options, level) {\n      return this.stream.write(super.dtdEntity(node, options, level));\n    }\n\n    dtdNotation(node, options, level) {\n      return this.stream.write(super.dtdNotation(node, options, level));\n    }\n\n  };\n\n}).call(this);\n","/**\n * @module M/impl/control/WmcControl\n */\nexport default class WmcControl extends M.impl.Control {\n  /**\n   * This function adds the control to the specified map\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the plugin\n   * @param {HTMLElement} html of the plugin\n   * @api stable\n   */\n  addTo(map, html) {\n    this.facadeMap_ = map;\n    this.element = html;\n\n    const olMap = map.getMapImpl();\n    ol.control.Control.call(this, {\n      element: html,\n      target: null,\n    });\n    olMap.addControl(this);\n\n    // super addTo - don't delete\n    super.addTo(map, html);\n  }\n\n  /**\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  activate() {}\n\n  /**\n   * @public\n   * @function\n   * @api stable\n   */\n  deactivate() {}\n\n  /**\n   * @memberof WMCControl\n   */\n  getViewContext() {\n    const viewContext = {\n      General: {\n        BoundingBox: {},\n      },\n      LayerList: {\n        Layer: [],\n      },\n      $version: '1.1.0',\n      $xmlns: 'http://www.opengis.net/context',\n      $id: 'Contexto_IECA',\n      '$xmlns:xlink': 'http://www.w3.org/1999/xlink',\n      '$xmlns:xsi': 'http://www.w3.org/2001/XMLSchema-instance',\n      '$xsi:schemaLocation': 'http://www.opengis.net/context http://schemas.opengis.net/context/1.1.0/context.xsd',\n    };\n\n    viewContext.General.Title = 'WMC IECA';\n\n    // vista del mapa\n    // mapView.getZoom\n    viewContext.General.BoundingBox.$SRS = this.facadeMap_.getProjection().code;\n    const extent = this.facadeMap_.getBbox();\n    viewContext.General.BoundingBox.$minx = extent.x.min;\n    viewContext.General.BoundingBox.$miny = extent.y.min;\n    viewContext.General.BoundingBox.$maxx = extent.x.max;\n    viewContext.General.BoundingBox.$maxy = extent.y.max;\n    viewContext.General.KeywordList = {\n      Keyword: ['IECA'],\n    };\n    viewContext.General.Abstract = 'Fichero de configuración del contexto de visualización de capas.';\n    viewContext.General.Extension = {};\n    const maxExtent = this.facadeMap_.getMaxExtent();\n    if (maxExtent) {\n      viewContext.General.Extension['ol:maxExtent'] = {\n        '$xmlns:ol': 'http://openlayers.org/context',\n        $minx: maxExtent.x ?\n          maxExtent.x.min : maxExtent[0],\n        $miny: maxExtent.y ?\n          maxExtent.x.min : maxExtent[1],\n        $maxx: maxExtent.x ?\n          maxExtent.x.min : maxExtent[2],\n        $maxy: maxExtent.y ?\n          maxExtent.x.min : maxExtent[3],\n      };\n    }\n    // ancho en pixels del mapa\n    /* viewContext.General.Window.$width = vsMap.getSize()[0];\n    viewContext.General.Window.$height = vsMap.getSize()[1]; */\n\n    // CAPAS\n    /* eslint-disable */\n    for (const layer of this.facadeMap_.getWMS()) {\n      const wmcLayer = {};\n\n      wmcLayer.$hidden = !layer.isVisible() ?\n        1 :\n        0;\n      wmcLayer.$queryable = layer.isQueryable() ?\n        1 :\n        0;\n      wmcLayer.Name = layer.name;\n      wmcLayer.Title = layer.legend;\n      // server\n      wmcLayer.Server = {\n        OnlineResource: {\n          '$xmlns:xlink': 'http://www.w3.org/1999/xlink',\n          '$xlink:type': 'simple',\n          '$xlink:href': layer.url,\n        },\n        $service: 'OGC:WMS',\n        $version: layer.version,\n      };\n\n      // Si se trata de una capa base, incluyo la leyenda porque debería ser la imagen del mapa\n      if (!layer.transparent) {\n        wmcLayer.StyleList = {\n          Style: [\n            {\n              $current: 1,\n              Name: 'Default',\n              Title: 'Default',\n              LegendURL: {\n                $width: 200,\n                $height: 120,\n                $format: 'image/png',\n                OnlineResource: {\n                  '$xmlns:xlink': 'http://www.w3.org/1999/xlink',\n                  '$xlink:type': 'simple',\n                  '$xlink:href': layer.getLegendURL(),\n                },\n              },\n            },\n          ],\n        };\n      }\n\n      // EXTENSIONES DE MAPEA\n      wmcLayer.Extension = {\n        'ol:opacity': {\n          '#text': layer.getOpacity(),\n          '$xmlns:ol': 'http://openlayers.org/context',\n        },\n        'ol:transparent': {\n          '#text': layer.transparent,\n          '$xmlns:ol': 'http://openlayers.org/context',\n        },\n        'ol:isBaseLayer': {\n          '#text': !layer.transparent,\n          '$xmlns:ol': 'http://openlayers.org/context',\n        },\n        'ol:displayInLayerSwitcher': {\n          '#text': layer.displayInLayerSwitcher,\n          '$xmlns:ol': 'http://openlayers.org/context',\n        },\n        'ol:singleTile': {\n          '#text': layer.tiled,\n          '$xmlns:ol': 'http://openlayers.org/context',\n        },\n      };\n\n      viewContext.LayerList.Layer.push(wmcLayer);\n    }\n    /* eslint-enable */\n    return viewContext;\n  }\n}\n","/**\n * @module M/impl/control/WmcLayer\n */\nexport default class WmcLayer extends M.impl.layer.WMC {\n  /**\n   * @classdesc\n   * Extensión de la implementación de la capa WMC para poder insertar\n   * capas WMC que no vengan por url\n   *\n   * @constructor\n   * @extends {M.impl.layer.WMC}\n   * @api stable\n   */\n  constructor(options) {\n    super(options);\n    this.projection = null;\n  }\n\n  /**\n   * This function select this WMC layer and\n   * triggers the event to draw it\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  select() {\n    if (this.selected === false) {\n      // unselect layers\n      this.map.getWMC().forEach((wmcLayer) => {\n        wmcLayer.unselect();\n      });\n\n      this.selected = true;\n      // set projection with the wmc\n      if (this.projection) {\n        this.map.setProjection({\n          code: this.projection.getCode(),\n          units: this.projection.getUnits(),\n        }, true);\n      }\n      if (!M.utils.isNullOrEmpty(this.bbox)) {\n        try {\n          this.map.setBbox(this.bbox, {\n            nearest: true,\n          });\n        } catch (error) {\n          M.dialog.info(error);\n        }\n      }\n      if (!M.utils.isNullOrEmpty(this.maxExtent)) {\n        this.map.setMaxExtent(this.maxExtent, false);\n      }\n      if (this.layers.length) {\n        this.map.addWMS(this.layers, true);\n      }\n      this.map.fire(M.evt.CHANGE_WMC, this);\n    }\n  }\n\n  loadContext(documentXML) {\n    return new Promise((success, fail) => {\n      try {\n        if (documentXML) {\n          // JGL: mapea5 incluye WMC y WMC110 dentro del array wmc\n          const formater = M.impl.format.wmc ?\n            new M.impl.format.wmc.WMC() : new M.impl.format.WMC();\n          const context = formater.readFromDocument(documentXML);\n          success(context);\n        } else if (this.url) {\n          // Carga el contexto\n          M.remote.get(this.url).then((response) => {\n            const wmcDocument = response.xml;\n            // JGL: mapea5 incluye WMC y WMC110 dentro del array wmc\n            const formater = M.impl.format.wmc ?\n              new M.impl.format.wmc.WMC() : new M.impl.format.WMC();\n            const context = formater.readFromDocument(wmcDocument);\n            success(context);\n          });\n        } else {\n          /* eslint-disable */\n          fail('No hay contexto');\n          /* eslint-enable */\n        }\n      } catch (error) {\n        fail(error);\n      }\n    });\n  }\n\n\n  loadLayers() {\n    if (this.map) {\n      this.map.addWMS(this.layers, true);\n    }\n  }\n\n  loadContextParameters(context) {\n    this.layers = context.layers;\n    // Debido a que en Mapea si no hay capas base se selecciona como activa\n    // la primera que llegue y las demás se desactivan  hay que reordenar\n    // el array de capas base para que las visibles se añadan primero\n    this.layers.sort((layerA, layerB) => {\n      let result = 1;\n      const visibleA = layerA.isVisible();\n      const visibleB = layerB.isVisible();\n      const isBaseLayerA = !layerA.transparent;\n      const isBaseLayerB = !layerB.transparent;\n      // Si ambas son visible, o no visibles, o alguna de las dos no es base no se ordenan\n      if ((visibleA && visibleB) || (!visibleA && !visibleB) || !isBaseLayerA || !isBaseLayerB) {\n        result = 0;\n      } else if (visibleA) {\n        result = -1;\n      }\n      return result;\n    });\n    this.bbox = {\n      x: {\n        min: context.bounds[0],\n        max: context.bounds[2],\n      },\n      y: {\n        min: context.bounds[1],\n        max: context.bounds[3],\n      },\n    };\n    this.maxExtent = {\n      x: {\n        min: context.maxExtent[0],\n        max: context.maxExtent[2],\n      },\n      y: {\n        min: context.maxExtent[1],\n        max: context.maxExtent[3],\n      },\n    };\n    this.projection = ol.proj.get(context.projection);\n  }\n}\n","import WmcLayerImpl from 'impl/wmclayer';\n\nexport default class WmcLayer extends M.layer.WMC {\n  /**\n   * @classdesc\n   * Clase WMCLayer que extiende de M.Layer.WMC para poder tener capas WMC\n   * que no provengan o se inicialicen desde una url\n   *\n   * @constructor\n   * @extends {M.Control}\n   * @api stable\n   */\n  constructor(options = {}) {\n    super('http://prueba.es');\n    this.url = null;\n    // 1. checks if the implementation can create PluginControl\n    if (M.utils.isUndefined(WmcLayerImpl)) {\n      M.exception('La implementación usada no puede crear controles WMCLayerImpl');\n    }\n    // 2. implementation of this control\n    const impl = new WmcLayerImpl(options);\n    this.setImpl(impl);\n  }\n}\n","/**\n * @module M/control/WmcControl\n */\n\nimport * as xmlbuilder from 'xmlbuilder';\nimport WmcImplControl from 'impl/wmccontrol';\nimport template from 'templates/wmc';\nimport WmcLayer from './wmclayer';\n\nexport default class WmcControl extends M.Control {\n  /**\n   * @classdesc\n   * Main constructor of the class. Creates a PluginControl\n   * control\n   *\n   * @constructor\n   * @extends {M.Control}\n   * @api stable\n   */\n  constructor() {\n    // 1. checks if the implementation can create PluginControl\n    if (M.utils.isUndefined(WmcImplControl)) {\n      M.exception('La implementación usada no puede crear controles WMCControl');\n    }\n    // 2. implementation of this control\n    const impl = new WmcImplControl();\n    super(impl, 'wmc');\n\n    this.file_ = null;\n    this.inputUrl_ = null;\n    this.loadBtn_ = null;\n    this.saveBtn_ = null;\n\n    // Inputs tabs\n    this.inputsTabs_ = null;\n    this.selectedTab_ = '';\n    // Inputs nombre carga wmc\n    this.inputWMCLoadName_ = null;\n    // Inputs nombre guardado wmc\n    this.inputWMCSaveName_ = null;\n    this.facadeMap_ = null;\n  }\n\n  /**\n   * @param {any} html\n   * @memberof WMCControl\n   */\n  addEvents(html) {\n    const inputFile = html.querySelector('.form div.file > input');\n    this.loadBtn_ = html.querySelector('.button > button.load');\n    this.saveBtn_ = html.querySelector('.button > button.save');\n    this.inputUrl_ = html.querySelector('.form div.url > input');\n    this.inputsTabs_ = html.querySelectorAll('input[name=\"tabs-wmc\"]');\n    this.selectedTab_ = html.querySelector('input[name=\"tabs-wmc\"]:checked').dataset.tab;\n    this.inputWMCLoadName_ = html.querySelector('.form div.load-name > input');\n    this.inputWMCSaveName_ = html.querySelector('.form div.save-name > input');\n\n    inputFile.addEventListener('change', evt => this.changeFile(evt, inputFile.files[0]));\n    this.loadBtn_.addEventListener('click', evt => this.loadWMC());\n    this.saveBtn_.addEventListener('click', evt => this.saveWMC());\n    this.inputUrl_.addEventListener('input', evt => this.checkButtons());\n    this.inputWMCLoadName_.addEventListener('input', evt => this.checkButtons());\n    this.inputWMCSaveName_.addEventListener('input', evt => this.checkButtons());\n\n    // Annado el evento a cada radio button para saber cuando se ha cambiado de tab\n    this.inputsTabs_.forEach((element) => {\n      element.addEventListener('change', evt => this.changeTab(evt));\n    });\n  }\n\n  /**\n   * This function creates the view\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the control\n   * @api stable\n   */\n  createView(map) {\n    this.facadeMap_ = map;\n    return new Promise((success, fail) => {\n      const html = M.template.compileSync(template);\n      this.addEvents(html);\n      success(html);\n    });\n  }\n\n  /**\n   * This function compares controls\n   *\n   * @public\n   * @function\n   * @param {M.Control} control to compare\n   * @api stable\n   */\n  equals(control) {\n    return control instanceof WmcControl;\n  }\n\n  /**\n   * Obtiene elemento del DOM escapando caracteres (no validos para busqueda por CSS)\n   * @param {any} target\n   * @param {any} selector\n   * @returns\n   * @memberof WMCControl\n   */\n  getQuerySelectorScapeCSS(target, selector) {\n    // eslint-disable-next-line no-undef\n    return target.querySelector(CSS.escape(selector));\n  }\n\n  changeTab(evt) {\n    const e = (evt || window.event);\n    const itemTarget = e.target;\n    this.selectedTab_ = itemTarget.dataset.tab;\n    this.checkButtons();\n  }\n\n  checkButtons() {\n    if (this.selectedTab_ === 'loadWMC') {\n      this.loadBtn_.disabled = (M.utils.isNullOrEmpty(this.file_) &&\n          M.utils.isNullOrEmpty(this.inputUrl_.value)) ||\n        M.utils.isNullOrEmpty(this.inputWMCLoadName_.value);\n      this.inputUrl_.disabled = !M.utils.isNullOrEmpty(this.file_);\n    } else {\n      this.saveBtn_.disabled = M.utils.isNullOrEmpty(this.inputWMCSaveName_.value);\n    }\n  }\n\n  /**\n   * @param {any} file\n   * @memberof WMCControl\n   */\n  changeFile(evt, file) {\n    this.file_ = file;\n    this.inputWMCLoadName_.value = this.file_.name.replace(/\\.[^/.]+$/, '');\n    this.checkButtons();\n    if (!M.utils.isNullOrEmpty(file)) {\n      if (file.size > 20971520) {\n        M.dialog.info('El fichero seleccionado sobrepasa el máximo de 20 MB permitido');\n        this.file_ = null;\n        this.checkButtons();\n      }\n    }\n  }\n\n  /**\n   * @param {any} evt\n   * @memberof WMCControl\n   */\n  changeName(evt) {\n    const e = (evt || window.event);\n    const itemTarget = e.target;\n    this.loadBtn_.disabled = (itemTarget.value.trim() === '');\n  }\n\n  saveWMC() {\n    try {\n      if ('Blob' in window) {\n        const fileName = `${this.inputWMCSaveName_.value}.xml`;\n        const ViewContext = this.getImpl().getViewContext();\n        // let  writer = xmlbuilder.streamWriter(process.stdout);\n        const xml = xmlbuilder.create({\n          ViewContext,\n        }, {\n          stringify: {\n            convertAttKey: '$',\n          },\n          encoding: 'utf-8',\n        });\n        const content = xml.end();\n        /* eslint-disable */\n        const textFileAsBlob = new Blob([content], { type: 'text/plain;charset=utf-8' });\n        if ('msSaveOrOpenBlob' in navigator) {\n          navigator.msSaveOrOpenBlob(textFileAsBlob, fileName);\n          /* eslint-enable */\n        } else {\n          const downloadLink = document.createElement('a');\n          downloadLink.download = fileName;\n          downloadLink.innerHTML = 'Download File';\n          if ('webkitURL' in window) {\n            // Chrome allows the link to be clicked without actually adding it to the DOM.\n            downloadLink.href = window.URL.createObjectURL(textFileAsBlob);\n          } else {\n            // Firefox requires the link to be added to the DOM before it can be clicked.\n            downloadLink.href = window.URL.createObjectURL(textFileAsBlob);\n            downloadLink.onclick = this.destroyClickedElement;\n            downloadLink.style.display = 'none';\n            document.body.appendChild(downloadLink);\n          }\n\n          downloadLink.click();\n        }\n      } else {\n        M.dialog.info('Tu navegador no soporta la descarga de ficheros Blob HML5');\n      }\n    } catch (error) {\n      M.dialog.error('Error al guardar el contexto del mapa');\n    }\n  }\n\n  /**\n   * @memberof WMCControl\n   */\n  loadWMC() {\n    let options;\n    if (this.file_) {\n      // eslint-disable-next-line no-undef\n      const fileReader = new FileReader();\n      fileReader.addEventListener('load', (e) => {\n        let documentXML;\n        if ((typeof DOMParser !== 'undefined')) {\n          documentXML = (new DOMParser()).parseFromString(fileReader.result, 'text/xml');\n        }\n        options = {\n          documentXML,\n        };\n        this.addToMap(options);\n      });\n\n      fileReader.readAsText(this.file_);\n    } else {\n      options = {\n        url: this.inputUrl_.value,\n      };\n      this.addToMap(options);\n    }\n  }\n\n  addToMap(options) {\n    try {\n      const wmcLayer = new WmcLayer(options); // adds the WMC layer\n      wmcLayer.name = this.inputWMCLoadName_.value;\n      wmcLayer.url = options.url;\n      // Compruebo que no esté ya añadida al mapa\n      const wmc = this.facadeMap_.getWMC(wmcLayer);\n      if (wmc.length === 0) {\n        this.facadeMap_.getImpl().addWMC([wmcLayer]);\n        this.facadeMap_.fire(M.evt.ADDED_LAYER, [wmcLayer]);\n        this.facadeMap_.fire(M.evt.ADDED_WMC, [wmcLayer]);\n\n        wmcLayer.getImpl().loadContext(options.documentXML).then((context) => {\n          wmcLayer.getImpl().loadContextParameters(context);\n          /* checks if it should create the WMC control\n           to select WMC */\n          const wmcselectorActive = (this.facadeMap_.getControls('wmcselector').length > 0);\n          const addedWmcLayers = this.facadeMap_.getWMC();\n          if (addedWmcLayers.length > 1 && !wmcselectorActive) {\n            this.facadeMap_.addControls(new M.control.WMCSelector());\n          }\n          wmcLayer.select();\n        });\n      } else {\n        wmc[0].select();\n      }\n    } catch (error) {\n      M.dialog.error('Error al cargar el fichero. Compruebe que se trata del fichero correcto');\n    }\n  }\n\n  destroyClickedElement_(event) {\n    document.body.removeChild(event.target);\n  }\n}\n","/**\n * @module M/plugin/Wmc\n */\nimport 'assets/css/wmc';\nimport WmcControl from './wmccontrol';\nimport api from '../../api';\n\n\nexport default class Wmc extends M.Plugin {\n  /**\n   * @classdesc\n   * Main facade plugin object. This class creates a plugin\n   * object which has an implementation Object\n   *\n   * @constructor\n   * @extends {M.Plugin}\n   * @param {Object} impl implementation object\n   * @api stable\n   */\n  constructor(parameters = {}) {\n    super(parameters);\n    /**\n     * Facade of the map\n     * @private\n     * @type {M.Map}\n     */\n    this.map_ = null;\n\n    /**\n     * Array of controls\n     * @private\n     * @type {Array<M.Control>}\n     */\n    this.control_ = null;\n\n    /**\n     * @private\n     * @type {M.ui.Panel}\n     */\n    this.panel_ = null;\n\n    /**\n     * Facade of the map\n     * @private\n     * @type {String}\n     */\n    this.params_ = {};\n    if (!M.utils.isNullOrEmpty(parameters.params)) {\n      this.params_ = parameters.params;\n    }\n\n    /**\n     * Facade of the map\n     * @private\n     * @type {String}\n     */\n    this.options_ = {};\n    if (!M.utils.isNullOrEmpty(parameters.options)) {\n      this.options_ = parameters.options;\n    }\n\n    /**\n     * Metadata from api.json\n     * @private\n     * @type {Object}\n     */\n    this.metadata_ = api.metadata;\n  }\n\n  /**\n   * This function adds this plugin into the map\n   *\n   * @public\n   * @function\n   * @param {M.Map} map the map to add the plugin\n   * @api stable\n   */\n  addTo(map) {\n    this.map_ = map;\n\n    this.control_ = new WmcControl();\n    this.panel_ = new M.ui.Panel('panelWmc', {\n      collapsible: true,\n      className: 'm-wmc',\n      collapsedButtonClass: 'g-cartografia-opciones',\n      position: M.ui.position.TR,\n      tooltip: 'Gestión de WMC',\n    });\n    this.panel_.on(M.evt.ADDED_TO_MAP, (html) => {\n      M.utils.enableTouchScroll(html);\n    });\n    this.panel_.addControls(this.control_);\n    this.map_.addPanels(this.panel_);\n\n    this.control_.on(M.evt.ADDED_TO_MAP, () => {\n      this.fire(M.evt.ADDED_TO_MAP);\n    });\n  }\n\n  /**\n   * @memberof WMC\n   */\n  destroy() {\n    this.map_.removeControls([this.control_]);\n    [this.map_, this.control_, this.panel_, this.options_] = [null, null, null, null];\n  }\n\n  /**\n   * @param {any} plugin\n   * @returns\n   * @memberof WMC\n   */\n  equals(plugin) {\n    let result = false;\n    if (plugin instanceof Wmc) {\n      result = true;\n    }\n    return result;\n  }\n\n  /**\n   * Name to identify this plugin\n   * @const\n   * @type {string}\n   * @public\n   * @api stable\n   */\n  get name() {\n    return 'wmc';\n  }\n\n  /**\n   * This function gets metadata plugin\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  getMetadata() {\n    return this.metadata_;\n  }\n}\n","import M$plugin$Wmc from './/facade/js/wmc';\nimport M$control$WmcControl from './/facade/js/wmccontrol';\nimport M$impl$control$WmcControl from './/impl/ol/js/wmccontrol';\nimport M$impl$control$WmcLayer from './/impl/ol/js/wmclayer';\n\nif (!window.M.plugin) window.M.plugin = {};\nif (!window.M.control) window.M.control = {};\nif (!window.M.impl) window.M.impl = {};\nif (!window.M.impl.control) window.M.impl.control = {};\nwindow.M.plugin.Wmc = M$plugin$Wmc;\nwindow.M.control.WmcControl = M$control$WmcControl;\nwindow.M.impl.control.WmcControl = M$impl$control$WmcControl;\nwindow.M.impl.control.WmcLayer = M$impl$control$WmcLayer;\n"],"sourceRoot":""}